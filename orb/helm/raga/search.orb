* Search


#!lua
local table = core.table
local clone, splice = assert(table.clone), assert(table.splice)
local EditBase = require "helm/raga/edit"
local Resbuf = require "helm:buf/resbuf"

local Search = clone(EditBase, 2)

Search.name = "search"
Search.prompt_char = "⁉️"
Search.keymap = require "helm:keymap/search"
#/lua


*** Search.onTxtbufChanged()

We need to update the search result whenever the contents of the Txtbuf change.

#!lua
function Search.onTxtbufChanged()
   send { to = "agents.search", method = "update" }
   EditBase.onTxtbufChanged()
end
#/lua


*** Search.onShift

Set up Agent connections--Txtbuf uses Historian for "suggestions", and that
same Window also drives the result zone.

#!lua
function Search.onShift(modeS)
   EditBase.onShift(modeS)
   modeS:agent'search':update(modeS)
   modeS.zones.command.contents.suggestions = modeS:agent'search':window()
   modeS:bindZone("results", "search", Resbuf, { scrollable = true })
end
#/lua

#!lua
return Search
#/lua
