digraph lpegNode {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 74"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-39"]


// END RANK doc_0

section_1 -> { header_2 prose_3 prose_4 codeblock_5 section_6}
{rank=same; header_2 prose_3 prose_4 codeblock_5 section_6}

header_2 [label="1 : Core"]

prose_3 [label="prose"]

prose_4 [label="prose"]

codeblock_5 [label="code block 8-37"]

section_6 [label="section: 40-74"]


// END RANK section_1

header_2 -> leaf_7
leaf_7  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* Core"]
// END RANK header_2

prose_3 -> { raw_8 prespace_9 literal_10 raw_11}
{rank=same; raw_8 prespace_9 literal_10 raw_11}

raw_8 [label="raw"]

prespace_9 [label="prespace"]

literal_10 [label="literal"]

raw_11 [label="raw"]


// END RANK prose_3

raw_8 -> leaf_12
leaf_12  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
// END RANK raw_8

prespace_9 -> leaf_13
leaf_13  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
// END RANK prespace_9

literal_10 -> leaf_14
leaf_14  [color=Gray,shape=rectangle,fontname=Inconsolata,label="core"]
// END RANK literal_10

raw_11 -> leaf_15
leaf_15  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is for tampering with the global namespace and standard libraries.
"]
// END RANK raw_11

prose_4 -> { raw_16 prespace_17 literal_18 raw_19}
{rank=same; raw_16 prespace_17 literal_18 raw_19}

raw_16 [label="raw"]

prespace_17 [label="prespace"]

literal_18 [label="literal"]

raw_19 [label="raw"]


// END RANK prose_4

raw_16 -> leaf_20
leaf_20  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
It will eventually land in"]
// END RANK raw_16

prespace_17 -> leaf_21
leaf_21  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_17

literal_18 -> leaf_22
leaf_22  [color=Gray,shape=rectangle,fontname=Inconsolata,label="femto"]
// END RANK literal_18

raw_19 -> leaf_23
leaf_23  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_19

codeblock_5 -> leaf_24
leaf_24  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local escape_lua_pattern
do
  local matches =
  {
    [\"^\"] = \"%^\";
    [\"$\"] = \"%$\";
    [\"(\"] = \"%(\";
    [\")\"] = \"%)\";
    [\"%\"] = \"%%\";
    [\".\"] = \"%.\";
    [\"[\"] = \"%[\";
    [\"]\"] = \"%]\";
    [\"*\"] = \"%*\";
    [\"+\"] = \"%+\";
    [\"-\"] = \"%-\";
    [\"?\"] = \"%?\";
    [\"\\0\"] = \"%z\";
  }

local function litpat(s)
    return (s:gsub(\".\", matches))
  end
end

local function cleave(str, pat)
   local at = string.find(str, pat)
   return string.sub(str, 1, at - 1), string.sub(str, at + 1)
end"]
// END RANK codeblock_5

section_6 -> { header_25 prose_26 prose_27 prose_28 codeblock_29 codeblock_30}
{rank=same; header_25 prose_26 prose_27 prose_28 codeblock_29 codeblock_30}

header_25 [label="2 : meta"]

prose_26 [label="prose"]

prose_27 [label="prose"]

prose_28 [label="prose"]

codeblock_29 [label="code block 50-66"]

codeblock_30 [label="code block 70-74"]


// END RANK section_6

header_25 -> leaf_31
leaf_31  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** meta"]
// END RANK header_25

prose_26 -> { raw_32 prespace_33 literal_34 raw_35 prespace_36 literal_37 raw_38 prespace_39 literal_40 raw_41 prespace_42 literal_43 raw_44 prespace_45 literal_46 raw_47 prespace_48 literal_49 raw_50}
{rank=same; raw_32 prespace_33 literal_34 raw_35 prespace_36 literal_37 raw_38 prespace_39 literal_40 raw_41 prespace_42 literal_43 raw_44 prespace_45 literal_46 raw_47 prespace_48 literal_49 raw_50}

raw_32 [label="raw"]

prespace_33 [label="prespace"]

literal_34 [label="literal"]

raw_35 [label="raw"]

prespace_36 [label="prespace"]

literal_37 [label="literal"]

raw_38 [label="raw"]

prespace_39 [label="prespace"]

literal_40 [label="literal"]

raw_41 [label="raw"]

prespace_42 [label="prespace"]

literal_43 [label="literal"]

raw_44 [label="raw"]

prespace_45 [label="prespace"]

literal_46 [label="literal"]

raw_47 [label="raw"]

prespace_48 [label="prespace"]

literal_49 [label="literal"]

raw_50 [label="raw"]


// END RANK prose_26

raw_32 -> leaf_51
leaf_51  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

We shorten a few of the common Lua keywords:"]
// END RANK raw_32

prespace_33 -> leaf_52
leaf_52  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_33

literal_34 -> leaf_53
leaf_53  [color=Gray,shape=rectangle,fontname=Inconsolata,label="coro"]
// END RANK literal_34

raw_35 -> leaf_54
leaf_54  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" rather than"]
// END RANK raw_35

prespace_36 -> leaf_55
leaf_55  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_36

literal_37 -> leaf_56
leaf_56  [color=Gray,shape=rectangle,fontname=Inconsolata,label="coroutine"]
// END RANK literal_37

raw_38 -> leaf_57
leaf_57  [color=Gray,shape=rectangle,fontname=Inconsolata,label=",
and"]
// END RANK raw_38

prespace_39 -> leaf_58
leaf_58  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_39

literal_40 -> leaf_59
leaf_59  [color=Gray,shape=rectangle,fontname=Inconsolata,label="getmeta"]
// END RANK literal_40

raw_41 -> leaf_60
leaf_60  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and"]
// END RANK raw_41

prespace_42 -> leaf_61
leaf_61  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_42

literal_43 -> leaf_62
leaf_62  [color=Gray,shape=rectangle,fontname=Inconsolata,label="setmeta"]
// END RANK literal_43

raw_44 -> leaf_63
leaf_63  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" over"]
// END RANK raw_44

prespace_45 -> leaf_64
leaf_64  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_45

literal_46 -> leaf_65
leaf_65  [color=Gray,shape=rectangle,fontname=Inconsolata,label="getmetatable"]
// END RANK literal_46

raw_47 -> leaf_66
leaf_66  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and"]
// END RANK raw_47

prespace_48 -> leaf_67
leaf_67  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_48

literal_49 -> leaf_68
leaf_68  [color=Gray,shape=rectangle,fontname=Inconsolata,label="setmetatable"]
// END RANK literal_49

raw_50 -> leaf_69
leaf_69  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_50

prose_27 -> { raw_70 prespace_71 literal_72 raw_73}
{rank=same; raw_70 prespace_71 literal_72 raw_73}

raw_70 [label="raw"]

prespace_71 [label="prespace"]

literal_72 [label="literal"]

raw_73 [label="raw"]


// END RANK prose_27

raw_70 -> leaf_74
leaf_74  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
In my code there is a repeated pattern of use that is basic enough that I'm
entering it into the global namespace as simple"]
// END RANK raw_70

prespace_71 -> leaf_75
leaf_75  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" "]
// END RANK prespace_71

literal_72 -> leaf_76
leaf_76  [color=Gray,shape=rectangle,fontname=Inconsolata,label="meta"]
// END RANK literal_72

raw_73 -> leaf_77
leaf_77  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
// END RANK raw_73

prose_28 -> { raw_78}
{rank=same; raw_78}

raw_78 [label="raw"]


// END RANK prose_28

raw_78 -> leaf_79
leaf_79  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
It is eleven lines long.
"]
// END RANK raw_78

codeblock_29 -> leaf_80
leaf_80  [color=Gray,shape=rectangle,fontname=Inconsolata,label="local function meta(MT)
   if MT and MT.__index then
      -- inherit
      return setmetatable({}, MT)
   elseif MT then
      -- instantiate
      MT.__index = MT
      return setmetatable({}, MT)
   else
      -- new metatable
      local _M = {}
      _M.__index = _M
      return _M
   end
end"]
// END RANK codeblock_29

codeblock_30 -> leaf_81
leaf_81  [color=Gray,shape=rectangle,fontname=Inconsolata,label="return { litpat = litpat,
         cleave = cleave,
         meta  = meta}"]
// END RANK codeblock_30


}
