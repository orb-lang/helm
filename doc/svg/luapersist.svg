<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: lpegNode Pages: 1 -->
<svg width="6442pt" height="6531pt"
 viewBox="0.00 0.00 6442.00 6530.61" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 6526.6109)">
<title>lpegNode</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-6526.6109 6438,-6526.6109 6438,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="3141.5" cy="-6504.6109" rx="46.9581" ry="18"/>
<text text-anchor="middle" x="3141.5" y="-6500.4109" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">doc &#45; 443</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="3141.5" cy="-6432.6109" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="3141.5" y="-6428.4109" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1&#45;443</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3141.5,-6486.4423C3141.5,-6478.7418 3141.5,-6469.5852 3141.5,-6461.0275"/>
<polygon fill="#000000" stroke="#000000" points="3145.0001,-6461.0241 3141.5,-6451.0242 3138.0001,-6461.0242 3145.0001,-6461.0241"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="2574.5" cy="-6360.6109" rx="134.1341" ry="18"/>
<text text-anchor="middle" x="2574.5" y="-6356.4109" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">1 : Table persistence via SQLite</text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3081.8927,-6425.0417C2987.1998,-6413.0172 2801.0108,-6389.3742 2682.4237,-6374.3155"/>
<polygon fill="#000000" stroke="#000000" points="2682.5923,-6370.8089 2672.231,-6373.0212 2681.7105,-6377.7531 2682.5923,-6370.8089"/>
</g>
<!-- prose_3 -->
<g id="node4" class="node">
<title>prose_3</title>
<ellipse fill="none" stroke="#000000" cx="2766.5" cy="-6360.6109" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="2766.5" y="-6356.4109" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;prose_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3079.2787,-6426.7147C3012.0607,-6419.3653 2902.2604,-6404.5028 2810.5,-6378.6109 2807.499,-6377.7641 2804.4254,-6376.7752 2801.366,-6375.7046"/>
<polygon fill="#000000" stroke="#000000" points="2802.3407,-6372.3317 2791.7488,-6372.0805 2799.8723,-6378.882 2802.3407,-6372.3317"/>
</g>
<!-- prose_4 -->
<g id="node5" class="node">
<title>prose_4</title>
<ellipse fill="none" stroke="#000000" cx="2851.5" cy="-6360.6109" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="2851.5" y="-6356.4109" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;prose_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3084.8233,-6423.2407C3034.2608,-6414.171 2958.5425,-6398.832 2894.5,-6378.6109 2891.7507,-6377.7428 2888.9338,-6376.7677 2886.1215,-6375.7323"/>
<polygon fill="#000000" stroke="#000000" points="2887.2699,-6372.4234 2876.6818,-6372.0469 2884.7241,-6378.9441 2887.2699,-6372.4234"/>
</g>
<!-- prose_5 -->
<g id="node6" class="node">
<title>prose_5</title>
<ellipse fill="none" stroke="#000000" cx="2935.5" cy="-6360.6109" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="2935.5" y="-6356.4109" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_5 -->
<g id="edge5" class="edge">
<title>section_1&#45;&gt;prose_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3097.2845,-6419.1967C3064.069,-6408.844 3017.5953,-6393.7711 2977.5,-6378.6109 2975.2461,-6377.7587 2972.9357,-6376.8553 2970.614,-6375.9248"/>
<polygon fill="#000000" stroke="#000000" points="2971.701,-6372.5872 2961.1219,-6372.0096 2969.0317,-6379.0583 2971.701,-6372.5872"/>
</g>
<!-- prose_6 -->
<g id="node7" class="node">
<title>prose_6</title>
<ellipse fill="none" stroke="#000000" cx="3018.5" cy="-6360.6109" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="3018.5" y="-6356.4109" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_6 -->
<g id="edge6" class="edge">
<title>section_1&#45;&gt;prose_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3113.5894,-6416.273C3094.6209,-6405.1695 3069.5028,-6390.4662 3049.8461,-6378.9598"/>
<polygon fill="#000000" stroke="#000000" points="3051.3623,-6375.7918 3040.964,-6373.7605 3047.826,-6381.8329 3051.3623,-6375.7918"/>
</g>
<!-- prose_7 -->
<g id="node8" class="node">
<title>prose_7</title>
<ellipse fill="none" stroke="#000000" cx="3100.5" cy="-6360.6109" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="3100.5" y="-6356.4109" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_7 -->
<g id="edge7" class="edge">
<title>section_1&#45;&gt;prose_7</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3131.3652,-6414.8131C3126.5632,-6406.3804 3120.7315,-6396.1394 3115.4358,-6386.8397"/>
<polygon fill="#000000" stroke="#000000" points="3118.3667,-6384.9134 3110.3768,-6377.9555 3112.2838,-6388.3773 3118.3667,-6384.9134"/>
</g>
<!-- prose_8 -->
<g id="node9" class="node">
<title>prose_8</title>
<ellipse fill="none" stroke="#000000" cx="3182.5" cy="-6360.6109" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="3182.5" y="-6356.4109" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_8 -->
<g id="edge8" class="edge">
<title>section_1&#45;&gt;prose_8</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3151.6348,-6414.8131C3156.4368,-6406.3804 3162.2685,-6396.1394 3167.5642,-6386.8397"/>
<polygon fill="#000000" stroke="#000000" points="3170.7162,-6388.3773 3172.6232,-6377.9555 3164.6333,-6384.9134 3170.7162,-6388.3773"/>
</g>
<!-- prose_9 -->
<g id="node10" class="node">
<title>prose_9</title>
<ellipse fill="none" stroke="#000000" cx="3986.5" cy="-6360.6109" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="3986.5" y="-6356.4109" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_9 -->
<g id="edge9" class="edge">
<title>section_1&#45;&gt;prose_9</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3204.322,-6427.258C3368.341,-6413.2824 3806.3067,-6375.9646 3944.2692,-6364.2093"/>
<polygon fill="#000000" stroke="#000000" points="3944.7641,-6367.6799 3954.4308,-6363.3434 3944.1698,-6360.7051 3944.7641,-6367.6799"/>
</g>
<!-- prose_10 -->
<g id="node11" class="node">
<title>prose_10</title>
<ellipse fill="none" stroke="#000000" cx="4664.5" cy="-6360.6109" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="4664.5" y="-6356.4109" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_10 -->
<g id="edge10" class="edge">
<title>section_1&#45;&gt;prose_10</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3206.4542,-6429.5402C3463.9895,-6417.3652 4409.5729,-6372.6626 4621.9603,-6362.622"/>
<polygon fill="#000000" stroke="#000000" points="4622.2595,-6366.1118 4632.083,-6362.1434 4621.9289,-6359.1196 4622.2595,-6366.1118"/>
</g>
<!-- prose_11 -->
<g id="node12" class="node">
<title>prose_11</title>
<ellipse fill="none" stroke="#000000" cx="4818.5" cy="-6360.6109" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="4818.5" y="-6356.4109" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_11 -->
<g id="edge11" class="edge">
<title>section_1&#45;&gt;prose_11</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3207.0596,-6431.4278C3464.6413,-6426.6118 4407.6864,-6407.361 4705.5,-6378.6109 4729.6298,-6376.2815 4756.4318,-6372.0827 4777.8754,-6368.3261"/>
<polygon fill="#000000" stroke="#000000" points="4778.7086,-6371.7328 4787.9366,-6366.5277 4777.4768,-6364.842 4778.7086,-6371.7328"/>
</g>
<!-- prose_12 -->
<g id="node13" class="node">
<title>prose_12</title>
<ellipse fill="none" stroke="#000000" cx="4936.5" cy="-6360.6109" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="4936.5" y="-6356.4109" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_12 -->
<g id="edge12" class="edge">
<title>section_1&#45;&gt;prose_12</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3207.4461,-6432.2851C3481.4866,-6430.6618 4531.2664,-6421.7009 4859.5,-6378.6109 4872.0483,-6376.9636 4885.5442,-6374.1685 4897.6781,-6371.2659"/>
<polygon fill="#000000" stroke="#000000" points="4898.6388,-6374.6337 4907.4995,-6368.8253 4896.9506,-6367.8403 4898.6388,-6374.6337"/>
</g>
<!-- codeblock_13 -->
<g id="node14" class="node">
<title>codeblock_13</title>
<ellipse fill="none" stroke="#000000" cx="5254.5" cy="-6360.6109" rx="82.2579" ry="18"/>
<text text-anchor="middle" x="5254.5" y="-6356.4109" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 43&#45;443</text>
</g>
<!-- section_1&#45;&gt;codeblock_13 -->
<g id="edge13" class="edge">
<title>section_1&#45;&gt;codeblock_13</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3207.3981,-6431.518C3445.7574,-6427.3849 4285.486,-6411.2615 4977.5,-6378.6109 5040.5868,-6375.6343 5111.6754,-6370.9881 5166.0398,-6367.1617"/>
<polygon fill="#000000" stroke="#000000" points="5166.6082,-6370.6303 5176.336,-6366.4328 5166.1138,-6363.6478 5166.6082,-6370.6303"/>
</g>
<!-- leaf_14 -->
<g id="node15" class="node">
<title>leaf_14</title>
<polygon fill="none" stroke="#c0c0c0" points="2686.5,-3232.1055 2460.5,-3232.1055 2460.5,-3196.1055 2686.5,-3196.1055 2686.5,-3232.1055"/>
<text text-anchor="middle" x="2573.5" y="-3210.6055" font-family="Inconsolata" font-size="14.00" fill="#000000">* Table persistence via SQLite</text>
</g>
<!-- header_2&#45;&gt;leaf_14 -->
<g id="edge14" class="edge">
<title>header_2&#45;&gt;leaf_14</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2574.4943,-6342.5261C2574.4179,-6102.1411 2573.604,-3541.3526 2573.509,-3242.5129"/>
<polygon fill="#000000" stroke="#000000" points="2577.0091,-3242.4777 2573.5058,-3232.4788 2570.0091,-3242.48 2577.0091,-3242.4777"/>
</g>
<!-- raw_15 -->
<g id="node16" class="node">
<title>raw_15</title>
<ellipse fill="none" stroke="#000000" cx="2731.5" cy="-3214.1055" rx="27" ry="18"/>
<text text-anchor="middle" x="2731.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_3&#45;&gt;raw_15 -->
<g id="edge15" class="edge">
<title>prose_3&#45;&gt;raw_15</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2766.2988,-6342.5261C2763.6249,-6102.1411 2735.1401,-3541.3526 2731.816,-3242.5129"/>
<polygon fill="#000000" stroke="#000000" points="2735.3155,-3242.4393 2731.7044,-3232.4788 2728.3159,-3242.5172 2735.3155,-3242.4393"/>
</g>
<!-- raw_17 -->
<g id="node18" class="node">
<title>raw_17</title>
<ellipse fill="none" stroke="#000000" cx="2803.5" cy="-3214.1055" rx="27" ry="18"/>
<text text-anchor="middle" x="2803.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_4&#45;&gt;raw_17 -->
<g id="edge17" class="edge">
<title>prose_4&#45;&gt;raw_17</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2846.5593,-6342.7694C2843.9124,-6332.3222 2840.9124,-6318.8222 2839.5,-6306.6109 2765.5673,-5667.422 2798.5166,-3514.3752 2803.0187,-3242.422"/>
<polygon fill="#000000" stroke="#000000" points="2806.5218,-3242.2634 2803.1892,-3232.2064 2799.5227,-3242.1466 2806.5218,-3242.2634"/>
</g>
<!-- raw_19 -->
<g id="node20" class="node">
<title>raw_19</title>
<ellipse fill="none" stroke="#000000" cx="2875.5" cy="-3214.1055" rx="27" ry="18"/>
<text text-anchor="middle" x="2875.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_5&#45;&gt;raw_19 -->
<g id="edge19" class="edge">
<title>prose_5&#45;&gt;raw_19</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2925.6006,-6343.2331C2920.3008,-6332.9406 2914.3008,-6319.4406 2911.5,-6306.6109 2842.5667,-5990.8442 2871.4565,-3533.3678 2875.1356,-3242.2542"/>
<polygon fill="#000000" stroke="#000000" points="2878.6371,-3242.1518 2875.2647,-3232.108 2871.6376,-3242.0626 2878.6371,-3242.1518"/>
</g>
<!-- raw_21 -->
<g id="node22" class="node">
<title>raw_21</title>
<ellipse fill="none" stroke="#000000" cx="2947.5" cy="-3214.1055" rx="27" ry="18"/>
<text text-anchor="middle" x="2947.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_6&#45;&gt;raw_21 -->
<g id="edge21" class="edge">
<title>prose_6&#45;&gt;raw_21</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3004.4623,-6344.3477C2996.6597,-6334.2219 2987.6997,-6320.514 2983.5,-6306.6109 2890.0403,-5997.2152 2940.5399,-3534.1254 2946.8755,-3242.3218"/>
<polygon fill="#000000" stroke="#000000" points="2950.3783,-3242.2255 2947.0976,-3232.1515 2943.38,-3242.0726 2950.3783,-3242.2255"/>
</g>
<!-- raw_23 -->
<g id="node24" class="node">
<title>raw_23</title>
<ellipse fill="none" stroke="#000000" cx="3019.5" cy="-3214.1055" rx="27" ry="18"/>
<text text-anchor="middle" x="3019.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_7&#45;&gt;raw_23 -->
<g id="edge23" class="edge">
<title>prose_7&#45;&gt;raw_23</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3082.5153,-6345.0615C3072.506,-6335.1888 3060.9874,-6321.4962 3055.5,-6306.6109 2943.7065,-6003.3575 3010.3598,-3534.8558 3018.681,-3242.3869"/>
<polygon fill="#000000" stroke="#000000" points="3022.1852,-3242.2893 3018.9726,-3232.1933 3015.188,-3242.0891 3022.1852,-3242.2893"/>
</g>
<!-- raw_25 -->
<g id="node26" class="node">
<title>raw_25</title>
<ellipse fill="none" stroke="#000000" cx="3091.5" cy="-3214.1055" rx="27" ry="18"/>
<text text-anchor="middle" x="3091.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_8&#45;&gt;raw_25 -->
<g id="edge25" class="edge">
<title>prose_8&#45;&gt;raw_25</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3161.7247,-6346.7459C3149.2736,-6337.1271 3134.5341,-6323.105 3127.5,-6306.6109 3000.7145,-6009.3133 3080.577,-3535.564 3090.522,-3242.4501"/>
<polygon fill="#000000" stroke="#000000" points="3094.0275,-3242.3474 3090.8704,-3232.2339 3087.0315,-3242.1088 3094.0275,-3242.3474"/>
</g>
<!-- prespace_26 -->
<g id="node27" class="node">
<title>prespace_26</title>
<ellipse fill="none" stroke="#000000" cx="3182.5" cy="-3214.1055" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="3182.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_8&#45;&gt;prespace_26 -->
<g id="edge26" class="edge">
<title>prose_8&#45;&gt;prespace_26</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3182.5,-6342.5261C3182.5,-6102.1411 3182.5,-3541.3526 3182.5,-3242.5129"/>
<polygon fill="#000000" stroke="#000000" points="3186.0001,-3242.4788 3182.5,-3232.4788 3179.0001,-3242.4789 3186.0001,-3242.4788"/>
</g>
<!-- literal_27 -->
<g id="node28" class="node">
<title>literal_27</title>
<ellipse fill="none" stroke="#000000" cx="3278.5" cy="-3214.1055" rx="31.481" ry="18"/>
<text text-anchor="middle" x="3278.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_8&#45;&gt;literal_27 -->
<g id="edge27" class="edge">
<title>prose_8&#45;&gt;literal_27</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3203.2662,-6346.7421C3215.7137,-6337.1217 3230.4526,-6323.0993 3237.5,-6306.6109 3364.5283,-6009.4099 3288.875,-3535.5755 3279.4296,-3242.4511"/>
<polygon fill="#000000" stroke="#000000" points="3282.9207,-3242.116 3279.0987,-3232.2346 3275.9244,-3242.3427 3282.9207,-3242.116"/>
</g>
<!-- raw_28 -->
<g id="node29" class="node">
<title>raw_28</title>
<ellipse fill="none" stroke="#000000" cx="3360.5" cy="-3214.1055" rx="27" ry="18"/>
<text text-anchor="middle" x="3360.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_8&#45;&gt;raw_28 -->
<g id="edge28" class="edge">
<title>prose_8&#45;&gt;raw_28</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3214.6003,-6357.8243C3246.8935,-6353.1247 3295.1535,-6340.5028 3318.5,-6306.6109 4044.0817,-5253.2892 3455.7168,-3482.6039 3370.433,-3241.5763"/>
<polygon fill="#000000" stroke="#000000" points="3373.6208,-3240.0948 3366.969,-3231.8484 3367.0264,-3242.443 3373.6208,-3240.0948"/>
</g>
<!-- raw_33 -->
<g id="node34" class="node">
<title>raw_33</title>
<ellipse fill="none" stroke="#000000" cx="3799.5" cy="-3214.1055" rx="27" ry="18"/>
<text text-anchor="middle" x="3799.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_9&#45;&gt;raw_33 -->
<g id="edge33" class="edge">
<title>prose_9&#45;&gt;raw_33</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3965.8984,-6346.6703C3953.5166,-6337.0212 3938.789,-6322.9939 3931.5,-6306.6109 3412.7395,-5140.6276 3742.8512,-3476.6579 3793.3279,-3242.0104"/>
<polygon fill="#000000" stroke="#000000" points="3796.8161,-3242.4395 3795.5157,-3231.9248 3789.9752,-3240.9555 3796.8161,-3242.4395"/>
</g>
<!-- prespace_34 -->
<g id="node35" class="node">
<title>prespace_34</title>
<ellipse fill="none" stroke="#000000" cx="3986.5" cy="-3214.1055" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="3986.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_9&#45;&gt;prespace_34 -->
<g id="edge34" class="edge">
<title>prose_9&#45;&gt;prespace_34</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3986.5,-6342.5261C3986.5,-6102.1411 3986.5,-3541.3526 3986.5,-3242.5129"/>
<polygon fill="#000000" stroke="#000000" points="3990.0001,-3242.4788 3986.5,-3232.4788 3983.0001,-3242.4789 3990.0001,-3242.4788"/>
</g>
<!-- literal_35 -->
<g id="node36" class="node">
<title>literal_35</title>
<ellipse fill="none" stroke="#000000" cx="4082.5" cy="-3214.1055" rx="31.481" ry="18"/>
<text text-anchor="middle" x="4082.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">literal</text>
</g>
<!-- prose_9&#45;&gt;literal_35 -->
<g id="edge35" class="edge">
<title>prose_9&#45;&gt;literal_35</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4007.2662,-6346.7421C4019.7137,-6337.1217 4034.4526,-6323.0993 4041.5,-6306.6109 4294.5247,-5714.623 4109.4968,-3518.1748 4085.0676,-3242.5747"/>
<polygon fill="#000000" stroke="#000000" points="4088.5197,-3241.8806 4084.1459,-3232.2307 4081.5474,-3242.5019 4088.5197,-3241.8806"/>
</g>
<!-- raw_36 -->
<g id="node37" class="node">
<title>raw_36</title>
<ellipse fill="none" stroke="#000000" cx="4244.5" cy="-3214.1055" rx="27" ry="18"/>
<text text-anchor="middle" x="4244.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_9&#45;&gt;raw_36 -->
<g id="edge36" class="edge">
<title>prose_9&#45;&gt;raw_36</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4018.4239,-6357.7011C4050.5732,-6352.901 4098.7174,-6340.1983 4122.5,-6306.6109 4862.1413,-5262.0392 4330.9378,-3483.8201 4253.5312,-3241.7031"/>
<polygon fill="#000000" stroke="#000000" points="4256.7814,-3240.3774 4250.3856,-3231.9309 4250.1182,-3242.5224 4256.7814,-3240.3774"/>
</g>
<!-- raw_41 -->
<g id="node42" class="node">
<title>raw_41</title>
<ellipse fill="none" stroke="#000000" cx="4573.5" cy="-3214.1055" rx="27" ry="18"/>
<text text-anchor="middle" x="4573.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_10&#45;&gt;raw_41 -->
<g id="edge41" class="edge">
<title>prose_10&#45;&gt;raw_41</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4643.7247,-6346.7459C4631.2736,-6337.1271 4616.5341,-6323.105 4609.5,-6306.6109 4109.0575,-5133.1295 4506.5441,-3474.0123 4566.274,-3241.555"/>
<polygon fill="#000000" stroke="#000000" points="4569.6672,-3242.4128 4568.7841,-3231.8548 4562.8904,-3240.6591 4569.6672,-3242.4128"/>
</g>
<!-- prespace_42 -->
<g id="node43" class="node">
<title>prespace_42</title>
<ellipse fill="none" stroke="#000000" cx="4664.5" cy="-3214.1055" rx="46.4736" ry="18"/>
<text text-anchor="middle" x="4664.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prespace</text>
</g>
<!-- prose_10&#45;&gt;prespace_42 -->
<g id="edge42" class="edge">
<title>prose_10&#45;&gt;prespace_42</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4664.5,-6342.5261C4664.5,-6102.1411 4664.5,-3541.3526 4664.5,-3242.5129"/>
<polygon fill="#000000" stroke="#000000" points="4668.0001,-3242.4788 4664.5,-3232.4788 4661.0001,-3242.4789 4668.0001,-3242.4788"/>
</g>
<!-- italic_43 -->
<g id="node44" class="node">
<title>italic_43</title>
<ellipse fill="none" stroke="#000000" cx="4756.5" cy="-3214.1055" rx="27.5976" ry="18"/>
<text text-anchor="middle" x="4756.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">italic</text>
</g>
<!-- prose_10&#45;&gt;italic_43 -->
<g id="edge43" class="edge">
<title>prose_10&#45;&gt;italic_43</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4685.2735,-6346.7452C4697.7239,-6337.126 4712.4633,-6323.1038 4719.5,-6306.6109 4846.334,-6009.3326 4767.3134,-3535.5663 4757.4683,-3242.4503"/>
<polygon fill="#000000" stroke="#000000" points="4760.9589,-3242.1103 4757.1234,-3232.2341 4753.9629,-3242.3465 4760.9589,-3242.1103"/>
</g>
<!-- raw_44 -->
<g id="node45" class="node">
<title>raw_44</title>
<ellipse fill="none" stroke="#000000" cx="4829.5" cy="-3214.1055" rx="27" ry="18"/>
<text text-anchor="middle" x="4829.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_10&#45;&gt;raw_44 -->
<g id="edge44" class="edge">
<title>prose_10&#45;&gt;raw_44</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4696.1578,-6357.1152C4726.8275,-6351.8651 4771.7908,-6338.8249 4793.5,-6306.6109 4883.9946,-6172.3272 4835.891,-3544.3277 4830.0551,-3242.3149"/>
<polygon fill="#000000" stroke="#000000" points="4833.5521,-3242.123 4829.8584,-3232.1929 4826.5534,-3242.2591 4833.5521,-3242.123"/>
</g>
<!-- raw_49 -->
<g id="node50" class="node">
<title>raw_49</title>
<ellipse fill="none" stroke="#000000" cx="4901.5" cy="-3214.1055" rx="27" ry="18"/>
<text text-anchor="middle" x="4901.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_11&#45;&gt;raw_49 -->
<g id="edge49" class="edge">
<title>prose_11&#45;&gt;raw_49</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4836.7886,-6345.6672C4847.3471,-6335.8201 4859.6605,-6321.9423 4865.5,-6306.6109 4980.5415,-6004.5747 4911.0264,-3535.0005 4902.3534,-3242.3998"/>
<polygon fill="#000000" stroke="#000000" points="4905.8459,-3242.0929 4902.0495,-3232.2016 4898.849,-3242.3015 4905.8459,-3242.0929"/>
</g>
<!-- raw_51 -->
<g id="node52" class="node">
<title>raw_51</title>
<ellipse fill="none" stroke="#000000" cx="4973.5" cy="-3214.1055" rx="27" ry="18"/>
<text text-anchor="middle" x="4973.5" y="-3209.9055" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_12&#45;&gt;raw_51 -->
<g id="edge51" class="edge">
<title>prose_12&#45;&gt;raw_51</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4936.8643,-6342.6114C4937.069,-6332.1116 4937.319,-6318.6116 4937.5,-6306.6109 4956.6665,-5035.5865 4971.1717,-3470.5811 4973.245,-3242.3799"/>
<polygon fill="#000000" stroke="#000000" points="4976.7459,-3242.2822 4973.3368,-3232.2508 4969.7462,-3242.2186 4976.7459,-3242.2822"/>
</g>
<!-- leaf_53 -->
<g id="node54" class="node">
<title>leaf_53</title>
<polygon fill="none" stroke="#c0c0c0" points="5860.5,-6306.6163 5018.5,-6306.6163 5018.5,-121.5947 5860.5,-121.5947 5860.5,-6306.6163"/>
<text text-anchor="middle" x="5439.5" y="-6291.4109" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;[[ luapersist3.lua &#160;2004&#45;Aug&#45;31 e</text>
<text text-anchor="middle" x="5439.5" y="-6260.0109" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;The author disclaims copyright to this source code. &#160;In place of</text>
<text text-anchor="middle" x="5439.5" y="-6244.6108" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;a legal notice, here is a blessing:</text>
<text text-anchor="middle" x="5439.5" y="-6229.2108" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;May you be healthy and well.</text>
<text text-anchor="middle" x="5439.5" y="-6213.8108" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;May you be free of all suffering.</text>
<text text-anchor="middle" x="5439.5" y="-6198.4107" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;May you be happy, giving more than you take.</text>
<text text-anchor="middle" x="5439.5" y="-6167.0107" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Lua Persistent Tables</text>
<text text-anchor="middle" x="5439.5" y="-6151.6107" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;loosely based on the wiki page http://lua&#45;users.org/wiki/PersistentTables</text>
<text text-anchor="middle" x="5439.5" y="-6136.2106" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;uses Lua SQLite 3 (see http://luaforge.net/projects/luasqlite/)</text>
<text text-anchor="middle" x="5439.5" y="-6120.8106" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;handles circular structures</text>
<text text-anchor="middle" x="5439.5" y="-6089.4106" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;DB Schema</text>
<text text-anchor="middle" x="5439.5" y="-6074.0105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;the Lua tables are stored in a single SQL table with five columns</text>
<text text-anchor="middle" x="5439.5" y="-6058.6105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;TID : Table ID that identifies the Lua table &#45;&#45; string</text>
<text text-anchor="middle" x="5439.5" y="-6043.2105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Key : index in the Lua Table &#45;&#45; TID, string, number, or boolean</text>
<text text-anchor="middle" x="5439.5" y="-6027.8105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Kyp : the data type of Key</text>
<text text-anchor="middle" x="5439.5" y="-6012.4104" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Val : value in the Lua Table at index &#45;&#45; TID, string, number, or boolean</text>
<text text-anchor="middle" x="5439.5" y="-5997.0104" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Vyp : the data type of Val</text>
<text text-anchor="middle" x="5439.5" y="-5965.6104" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;A row is created for each Lua Persistent Table to reserve its TID.</text>
<text text-anchor="middle" x="5439.5" y="-5950.2103" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;The Key, Kyp, Val, and Vyp columns are all set to &quot;_&quot;.</text>
<text text-anchor="middle" x="5439.5" y="-5918.8103" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Both Kyp and Vyp use the following encoding:</text>
<text text-anchor="middle" x="5439.5" y="-5903.4103" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;b&quot; &#45;&#45; boolean (Key/Val = &quot;t&quot; or &quot;f&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-5888.0102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;n&quot; &#45;&#45; number</text>
<text text-anchor="middle" x="5439.5" y="-5872.6102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;t&quot; &#45;&#45; TID</text>
<text text-anchor="middle" x="5439.5" y="-5857.2102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;s&quot; &#45;&#45; string</text>
<text text-anchor="middle" x="5439.5" y="-5841.8101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;e&quot; &#45;&#45; encoded string (the raw string has embedded NULs)</text>
<text text-anchor="middle" x="5439.5" y="-5826.4101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&quot;_&quot; &#45;&#45; null</text>
<text text-anchor="middle" x="5439.5" y="-5795.0101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Caveats</text>
<text text-anchor="middle" x="5439.5" y="-5779.61" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;1. Strings used for Key and Val may contain embedded &#39;\0&#39; NUL characters;</text>
<text text-anchor="middle" x="5439.5" y="-5764.21" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;they are stored using sqlite blobs.</text>
<text text-anchor="middle" x="5439.5" y="-5748.81" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;Strings used for TIDs must not have embedded NULs.</text>
<text text-anchor="middle" x="5439.5" y="-5733.41" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;2. A table may not be used as a key unless the table is already persistent;</text>
<text text-anchor="middle" x="5439.5" y="-5718.0099" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;tables may always be used as vals.</text>
<text text-anchor="middle" x="5439.5" y="-5702.6099" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;3. Functions, threads, and userdata are not supported as keys or vals.</text>
<text text-anchor="middle" x="5439.5" y="-5687.2099" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;4. Lua Persistent Tables may not have user metatables (they will not be</text>
<text text-anchor="middle" x="5439.5" y="-5671.8098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;persisted, and they may conflict with Lua Persistent Table events).</text>
<text text-anchor="middle" x="5439.5" y="-5640.4098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Implementation</text>
<text text-anchor="middle" x="5439.5" y="-5609.0098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Lua Persistent Tables are represented by an empty Lua Table and a</text>
<text text-anchor="middle" x="5439.5" y="-5593.6097" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;corresponding metatable.</text>
<text text-anchor="middle" x="5439.5" y="-5562.2097" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Lua Persistent Table Metatable events:</text>
<text text-anchor="middle" x="5439.5" y="-5546.8097" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;lpt_TID&quot; &#45;&#45; the TID for this table</text>
<text text-anchor="middle" x="5439.5" y="-5531.4096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;index&quot; &#45;&#45; handler for unmarshalling Key/Val from the DB</text>
<text text-anchor="middle" x="5439.5" y="-5516.0096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;newindex&quot; &#45;&#45; handler for marshalling Key/Val to the DB</text>
<text text-anchor="middle" x="5439.5" y="-5500.6096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;lpt_cache&quot; &#45;&#45; a Lua Table that caches Key/Val pairs</text>
<text text-anchor="middle" x="5439.5" y="-5485.2095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;lpt_db&quot; &#45;&#45; the Lua Persistent Table database descriptor for this table&#39;s db</text>
<text text-anchor="middle" x="5439.5" y="-5453.8095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;LuaPersist maintains one global weak table, map, that is used to find</text>
<text text-anchor="middle" x="5439.5" y="-5438.4095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Lua Persistent Tables that are already open. This insures that there</text>
<text text-anchor="middle" x="5439.5" y="-5423.0095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;is at most one version of each Lua Persistent Table in memory.</text>
<text text-anchor="middle" x="5439.5" y="-5407.6094" font-family="Inconsolata" font-size="14.00" fill="#000000">]]</text>
<text text-anchor="middle" x="5439.5" y="-5376.2094" font-family="Inconsolata" font-size="14.00" fill="#000000">require &quot;sqlite3&quot;</text>
<text text-anchor="middle" x="5439.5" y="-5344.8094" font-family="Inconsolata" font-size="14.00" fill="#000000">persist = {}</text>
<text text-anchor="middle" x="5439.5" y="-5313.4093" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_make_TID = function (lp,tbl)</text>
<text text-anchor="middle" x="5439.5" y="-5298.0093" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; return &quot;TID&quot;..math.random() &#45;&#45; fix me: confirm it&#39;s unique</text>
<text text-anchor="middle" x="5439.5" y="-5282.6093" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local TID</text>
<text text-anchor="middle" x="5439.5" y="-5267.2092" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;repeat</text>
<text text-anchor="middle" x="5439.5" y="-5251.8092" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;lp.seq = lp.seq + 1</text>
<text text-anchor="middle" x="5439.5" y="-5236.4092" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;TID = string.format(&#39;tid%d&#39;,lp.seq)</text>
<text text-anchor="middle" x="5439.5" y="-5221.0091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;until(not lp:exists(TID))</text>
<text text-anchor="middle" x="5439.5" y="-5205.6091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return TID</text>
<text text-anchor="middle" x="5439.5" y="-5190.2091" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-5158.8091" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_val_vyp = function (lp,k)</text>
<text text-anchor="middle" x="5439.5" y="-5143.409" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local ty = type(k)</text>
<text text-anchor="middle" x="5439.5" y="-5128.009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;string&quot;) then</text>
<text text-anchor="middle" x="5439.5" y="-5112.609" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if(string.find(k,&quot;%z&quot;)) then</text>
<text text-anchor="middle" x="5439.5" y="-5097.2089" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return k,&quot;e&quot;</text>
<text text-anchor="middle" x="5439.5" y="-5081.8089" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5439.5" y="-5066.4089" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return k,&quot;s&quot;</text>
<text text-anchor="middle" x="5439.5" y="-5051.0088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5439.5" y="-5035.6088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="5439.5" y="-5020.2088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;number&quot;) then return tostring(k),&quot;n&quot; end</text>
<text text-anchor="middle" x="5439.5" y="-5004.8087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;boolean&quot;) then if k then v=&quot;t&quot; else v=&quot;f&quot; end return v,&quot;b&quot; end</text>
<text text-anchor="middle" x="5439.5" y="-4989.4087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;table&quot;) then</text>
<text text-anchor="middle" x="5439.5" y="-4974.0087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local mt = getmetatable(k)</text>
<text text-anchor="middle" x="5439.5" y="-4958.6086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local TID</text>
<text text-anchor="middle" x="5439.5" y="-4943.2086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if(mt~=nil) then TID = mt.__lpt_TID end</text>
<text text-anchor="middle" x="5439.5" y="-4927.8086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if(mt==nil or TID==nil) then</text>
<text text-anchor="middle" x="5439.5" y="-4912.4086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;TID = _persist_make_TID(lp,k)</text>
<text text-anchor="middle" x="5439.5" y="-4897.0085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local t = persist.new_table(lp,TID)</text>
<text text-anchor="middle" x="5439.5" y="-4881.6085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;persist.set_table(lp,TID,k)</text>
<text text-anchor="middle" x="5439.5" y="-4866.2085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5439.5" y="-4850.8084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return TID,&quot;t&quot;</text>
<text text-anchor="middle" x="5439.5" y="-4835.4084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="5439.5" y="-4820.0084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(nil,&quot;non&#45;persistent type: &quot;..ty..&quot;!?&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-4804.6083" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-4773.2083" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_key_kyp = function (lp,k)</text>
<text text-anchor="middle" x="5439.5" y="-4757.8083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(type(k)==&quot;table&quot;) then</text>
<text text-anchor="middle" x="5439.5" y="-4742.4082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local mt = getmetatable(k)</text>
<text text-anchor="middle" x="5439.5" y="-4727.0082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local TID</text>
<text text-anchor="middle" x="5439.5" y="-4711.6082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if(mt~=nil) then TID = mt.__lpt_TID end</text>
<text text-anchor="middle" x="5439.5" y="-4696.2081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if(mt==nil or TID==nil) then</text>
<text text-anchor="middle" x="5439.5" y="-4680.8081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error(&quot;use of non&#45;persistent table as key not supported&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-4665.4081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5439.5" y="-4650.0081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return TID,&quot;t&quot;</text>
<text text-anchor="middle" x="5439.5" y="-4634.608" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="5439.5" y="-4619.208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return _persist_val_vyp(lp,k)</text>
<text text-anchor="middle" x="5439.5" y="-4603.808" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-4572.4079" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_raw_to_val = function (lp,ty,raw)</text>
<text text-anchor="middle" x="5439.5" y="-4557.0079" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;s&quot;) then return raw end</text>
<text text-anchor="middle" x="5439.5" y="-4541.6079" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;n&quot;) then return raw+0 end</text>
<text text-anchor="middle" x="5439.5" y="-4526.2078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;b&quot;) then return raw==&quot;t&quot; end</text>
<text text-anchor="middle" x="5439.5" y="-4510.8078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;t&quot;) then return lp:get_table(raw) end</text>
<text text-anchor="middle" x="5439.5" y="-4495.4078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;e&quot;) then return raw end</text>
<text text-anchor="middle" x="5439.5" y="-4480.0077" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(nil,&quot;fix me &#45;&#45; what type is: &quot;..ty..&quot;?&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-4464.6077" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-4433.2077" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_vm_setup = function (lp,vm,TID,k)</text>
<text text-anchor="middle" x="5439.5" y="-4417.8076" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local key,kyp = _persist_key_kyp(lp,k) &#45;&#45; this must come before vm:reset since it might use vm</text>
<text text-anchor="middle" x="5439.5" y="-4402.4076" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(vm:reset()==sqlite3.OK,&quot;db reset error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-4387.0076" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(vm:bind(1,TID)==sqlite3.OK,&quot;db TID bind error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-4371.6076" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if kyp==&quot;e&quot;</text>
<text text-anchor="middle" x="5439.5" y="-4356.2075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;then</text>
<text text-anchor="middle" x="5439.5" y="-4340.8075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;assert(vm:bind_blob(2,key)==sqlite3.OK,&quot;db Key bind error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-4325.4075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;else</text>
<text text-anchor="middle" x="5439.5" y="-4310.0074" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;assert(vm:bind(2,key)==sqlite3.OK,&quot;db Key bind error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-4294.6074" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="5439.5" y="-4279.2074" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(vm:bind(3,kyp)==sqlite3.OK,&quot;db Kyp bind error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-4263.8073" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-4232.4073" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_index = function (t,k)</text>
<text text-anchor="middle" x="5439.5" y="-4217.0073" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(k,&quot;key of nil not permitted&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-4201.6072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local ca = assert(getmetatable(t).__lpt_cache,&quot;there is no __lpt_cache for this persistent table&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-4186.2072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local v = rawget(ca,k)</text>
<text text-anchor="middle" x="5439.5" y="-4170.8072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(v~=nil) then return v end</text>
<text text-anchor="middle" x="5439.5" y="-4155.4071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local lp = assert(getmetatable(t).__lpt_db,&quot;there is no __lpt_db for this persistent table&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-4140.0071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local TID = assert(getmetatable(t).__lpt_TID,&quot;there is no __lpt_TID for this persistent table&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-4124.6071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_vm_setup(lp,lp.vm_get,TID,k)</text>
<text text-anchor="middle" x="5439.5" y="-4109.2071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local rc = lp.vm_get:step()</text>
<text text-anchor="middle" x="5439.5" y="-4093.807" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(rc==sqlite3.ROW) then</text>
<text text-anchor="middle" x="5439.5" y="-4078.407" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local da</text>
<text text-anchor="middle" x="5439.5" y="-4063.007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;da = lp.vm_get:get_values()</text>
<text text-anchor="middle" x="5439.5" y="-4047.6069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;lp.vm_get:reset() &#45;&#45; releases locks afer step</text>
<text text-anchor="middle" x="5439.5" y="-4032.2069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;assert(da,&quot;db lp.vm_get:data error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-4016.8069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;v = _persist_raw_to_val(lp, da[2], da[1])</text>
<text text-anchor="middle" x="5439.5" y="-4001.4068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;rawset(ca,k,v)</text>
<text text-anchor="middle" x="5439.5" y="-3986.0068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;else</text>
<text text-anchor="middle" x="5439.5" y="-3970.6068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;lp.vm_get:reset() &#45;&#45; releases locks afer step</text>
<text text-anchor="middle" x="5439.5" y="-3955.2067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;v = nil</text>
<text text-anchor="middle" x="5439.5" y="-3939.8067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="5439.5" y="-3924.4067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return v</text>
<text text-anchor="middle" x="5439.5" y="-3909.0066" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-3877.6066" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_exists = function (lp,TID)</text>
<text text-anchor="middle" x="5439.5" y="-3862.2066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_vm_setup(lp,lp.vm_get,TID,&quot;_&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-3846.8066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_get:bind(3,&quot;_&quot;)==sqlite3.OK,&quot;db _ bind error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-3831.4065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local rc = lp.vm_get:step()</text>
<text text-anchor="middle" x="5439.5" y="-3816.0065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_get:reset() &#45;&#45; releases locks afer step</text>
<text text-anchor="middle" x="5439.5" y="-3800.6065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return(rc==sqlite3.ROW)</text>
<text text-anchor="middle" x="5439.5" y="-3785.2064" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-3753.8064" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_newindex = function (t,k,v)</text>
<text text-anchor="middle" x="5439.5" y="-3738.4064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(k,&quot;key of nil not permitted&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-3723.0063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local ca = assert(getmetatable(t).__lpt_cache,&quot;there is no __lpt_cache for this persistent table&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-3707.6063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; local pv = rawget(ca,k)</text>
<text text-anchor="middle" x="5439.5" y="-3692.2063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; if(pv~=nil) then end &#45;&#45; maybe remove tables &#45;&#45; but need gc since there may be circular refs!</text>
<text text-anchor="middle" x="5439.5" y="-3676.8062" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local lp = assert(getmetatable(t).__lpt_db,&quot;there is no __lpt_db for this persistent table&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-3661.4062" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local TID = assert(getmetatable(t).__lpt_TID,&quot;there is no __lpt_TID for this persistent table&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-3646.0062" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local rc, vm</text>
<text text-anchor="middle" x="5439.5" y="-3630.6061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(v~=nil) then</text>
<text text-anchor="middle" x="5439.5" y="-3615.2061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local val,vyp = _persist_val_vyp(lp,v) &#45;&#45; this must come before vm_setup since it might use vm</text>
<text text-anchor="middle" x="5439.5" y="-3599.8061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;vm = lp.vm_new</text>
<text text-anchor="middle" x="5439.5" y="-3584.4061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;_persist_vm_setup(lp,vm,TID,k)</text>
<text text-anchor="middle" x="5439.5" y="-3569.006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if vyp==&quot;e&quot;</text>
<text text-anchor="middle" x="5439.5" y="-3553.606" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;then</text>
<text text-anchor="middle" x="5439.5" y="-3538.206" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;assert(lp.vm_new:bind_blob(4,val)==sqlite3.OK,&quot;db Key bind error:&quot;..val)</text>
<text text-anchor="middle" x="5439.5" y="-3522.8059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;else</text>
<text text-anchor="middle" x="5439.5" y="-3507.4059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;assert(lp.vm_new:bind(4,val)==sqlite3.OK,&quot;db Key bind error:&quot;..val)</text>
<text text-anchor="middle" x="5439.5" y="-3492.0059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5439.5" y="-3476.6058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;assert(lp.vm_new:bind(5,vyp)==sqlite3.OK,&quot;db Kyp bind error:&quot;..vyp)</text>
<text text-anchor="middle" x="5439.5" y="-3461.2058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;rc = lp.vm_new:step()</text>
<text text-anchor="middle" x="5439.5" y="-3445.8058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;else</text>
<text text-anchor="middle" x="5439.5" y="-3430.4057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;vm = lp.vm_del</text>
<text text-anchor="middle" x="5439.5" y="-3415.0057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;_persist_vm_setup(lp,vm,TID,k)</text>
<text text-anchor="middle" x="5439.5" y="-3399.6057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;rc = lp.vm_del:step()</text>
<text text-anchor="middle" x="5439.5" y="-3384.2056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="5439.5" y="-3368.8056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;vm:reset() &#45;&#45; releases locks afer step</text>
<text text-anchor="middle" x="5439.5" y="-3353.4056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(rc==sqlite3.DONE) then</text>
<text text-anchor="middle" x="5439.5" y="-3338.0056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;rawset(ca,k,v)</text>
<text text-anchor="middle" x="5439.5" y="-3322.6055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;else</text>
<text text-anchor="middle" x="5439.5" y="-3307.2055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;error(&quot;bad result code: &quot;..rc..&quot;&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-3291.8055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="5439.5" y="-3276.4054" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-3245.0054" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_pairs = function (t)</text>
<text text-anchor="middle" x="5439.5" y="-3229.6054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(type(t)==&#39;table&#39;,&quot;arg is not a table&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-3214.2053" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local ca = assert(getmetatable(t).__lpt_cache,&quot;arg is not a persistent table&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-3198.8053" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return pairs(ca)</text>
<text text-anchor="middle" x="5439.5" y="-3183.4053" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-3152.0052" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_check = function (lp)</text>
<text text-anchor="middle" x="5439.5" y="-3136.6052" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.LPT,&quot;the db must be opened first with persist.open&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-3121.2052" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.db,&quot;the db must be opened first with persist.open&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-3105.8051" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-3074.4051" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.close = function (lp)</text>
<text text-anchor="middle" x="5439.5" y="-3059.0051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_check(lp)</text>
<text text-anchor="middle" x="5439.5" y="-3043.6051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.db:close()</text>
<text text-anchor="middle" x="5439.5" y="-3028.205" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.db=nil;</text>
<text text-anchor="middle" x="5439.5" y="-3012.805" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; nice for GC?</text>
<text text-anchor="middle" x="5439.5" y="-2997.405" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_new = nil</text>
<text text-anchor="middle" x="5439.5" y="-2982.0049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_del = nil</text>
<text text-anchor="middle" x="5439.5" y="-2966.6049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_get = nil</text>
<text text-anchor="middle" x="5439.5" y="-2951.2049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_set = nil</text>
<text text-anchor="middle" x="5439.5" y="-2935.8048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_delt = nil</text>
<text text-anchor="middle" x="5439.5" y="-2920.4048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.map = nil</text>
<text text-anchor="middle" x="5439.5" y="-2905.0048" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-2873.6047" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_new_table = function (lp,TID)</text>
<text text-anchor="middle" x="5439.5" y="-2858.2047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local t = {}</text>
<text text-anchor="middle" x="5439.5" y="-2842.8047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;setmetatable(t,{[&quot;__lpt_db&quot;] = lp,</text>
<text text-anchor="middle" x="5439.5" y="-2827.4047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[&quot;__lpt_TID&quot;] = TID,</text>
<text text-anchor="middle" x="5439.5" y="-2812.0046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[&quot;__lpt_cache&quot;] = {},</text>
<text text-anchor="middle" x="5439.5" y="-2796.6046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[&quot;__index&quot;] = _persist_index,</text>
<text text-anchor="middle" x="5439.5" y="-2781.2046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[&quot;__newindex&quot;] = _persist_newindex,</text>
<text text-anchor="middle" x="5439.5" y="-2765.8045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[&quot;__unm&quot;] = _persist_pairs})</text>
<text text-anchor="middle" x="5439.5" y="-2750.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return t</text>
<text text-anchor="middle" x="5439.5" y="-2735.0045" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-2703.6044" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.exists = _persist_exists</text>
<text text-anchor="middle" x="5439.5" y="-2672.2044" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.new_table = function (lp,TID)</text>
<text text-anchor="middle" x="5439.5" y="-2656.8044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_check(lp)</text>
<text text-anchor="middle" x="5439.5" y="-2641.4043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.map[TID]==nil,&quot;the table is already created and open&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-2626.0043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(not lp:exists(TID),&quot;a persistent table with TID &quot;..TID..&quot; already exists&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-2610.6043" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local t = _persist_new_table(lp,TID)</text>
<text text-anchor="middle" x="5439.5" y="-2595.2042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_new:reset()==sqlite3.OK,&quot;reset error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-2579.8042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_new:bind(1,TID)==sqlite3.OK,&quot;bind 1 error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-2564.4042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_new:bind(2,&quot;_&quot;)==sqlite3.OK,&quot;bind 2 error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-2549.0042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_new:bind(3,&quot;_&quot;)==sqlite3.OK,&quot;bind 3 error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-2533.6041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_new:bind(4,&quot;_&quot;)==sqlite3.OK,&quot;bind 4 error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-2518.2041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_new:bind(5,&quot;_&quot;)==sqlite3.OK,&quot;bind 5 error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-2502.8041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local rc = lp.vm_new:step()</text>
<text text-anchor="middle" x="5439.5" y="-2487.404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_new:reset() &#45;&#45; release locks</text>
<text text-anchor="middle" x="5439.5" y="-2472.004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(rc==sqlite3.DONE) then</text>
<text text-anchor="middle" x="5439.5" y="-2456.604" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;lp.map[TID] = t</text>
<text text-anchor="middle" x="5439.5" y="-2441.2039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;else</text>
<text text-anchor="middle" x="5439.5" y="-2425.8039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;error(&quot;step error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-2410.4039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="5439.5" y="-2395.0038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return t</text>
<text text-anchor="middle" x="5439.5" y="-2379.6038" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-2348.2038" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.cache = function (lp,TID)</text>
<text text-anchor="middle" x="5439.5" y="-2332.8037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_check(lp)</text>
<text text-anchor="middle" x="5439.5" y="-2317.4037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local t = lp.map[TID]</text>
<text text-anchor="middle" x="5439.5" y="-2302.0037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(t~=nil,&quot;the table does not exist&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-2286.6037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local ca = assert(getmetatable(t).__lpt_cache,&quot;there is no __lpt_cache for this persistent table&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-2271.2036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; whack the vm</text>
<text text-anchor="middle" x="5439.5" y="-2255.8036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;fn,vm,rc = lp.db:urows(&quot;SELECT Key,Kyp,Val,Vyp FROM luat where TID=?&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-2240.4036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(vm,&quot;lp.db:rows failed&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-2225.0035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;vm:bind(1,TID)</text>
<text text-anchor="middle" x="5439.5" y="-2209.6035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;for Key,Kyp,Val,Vyp in fn,vm,rc do</text>
<text text-anchor="middle" x="5439.5" y="-2194.2035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if( Key ~= &quot;_&quot; ) then</text>
<text text-anchor="middle" x="5439.5" y="-2178.8034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;rawset(ca, _persist_raw_to_val(lp,Kyp,Key), _persist_raw_to_val(lp,Vyp,Val))</text>
<text text-anchor="middle" x="5439.5" y="-2163.4034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="5439.5" y="-2148.0034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="5439.5" y="-2132.6033" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-2101.2033" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.get_table = function (lp,TID)</text>
<text text-anchor="middle" x="5439.5" y="-2085.8033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_check(lp)</text>
<text text-anchor="middle" x="5439.5" y="-2070.4032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local t = lp.map[TID]</text>
<text text-anchor="middle" x="5439.5" y="-2055.0032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(t~=nil) then return t end</text>
<text text-anchor="middle" x="5439.5" y="-2039.6032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp:exists(TID),&quot;no persistent table has the TID &quot;..TID)</text>
<text text-anchor="middle" x="5439.5" y="-2024.2032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;t = _persist_new_table(lp,TID)</text>
<text text-anchor="middle" x="5439.5" y="-2008.8031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.map[TID] = t</text>
<text text-anchor="middle" x="5439.5" y="-1993.4031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; this needn&#39;t cache the whole table! we can make it lazy</text>
<text text-anchor="middle" x="5439.5" y="-1978.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; persist.cache(lp,TID)</text>
<text text-anchor="middle" x="5439.5" y="-1962.603" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return t</text>
<text text-anchor="middle" x="5439.5" y="-1947.203" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-1915.803" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.set_table = function (lp,TID,s)</text>
<text text-anchor="middle" x="5439.5" y="-1900.4029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_check(lp)</text>
<text text-anchor="middle" x="5439.5" y="-1885.0029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local t = lp.map[TID]</text>
<text text-anchor="middle" x="5439.5" y="-1869.6029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(t~=nil,&quot;the table does not exist&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-1854.2028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;for k,v in pairs(s) do</text>
<text text-anchor="middle" x="5439.5" y="-1838.8028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;t[k]=v</text>
<text text-anchor="middle" x="5439.5" y="-1823.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="5439.5" y="-1808.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return t</text>
<text text-anchor="middle" x="5439.5" y="-1792.6027" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-1761.2027" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.delete_table = function (lp,TID)</text>
<text text-anchor="middle" x="5439.5" y="-1745.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_check(lp)</text>
<text text-anchor="middle" x="5439.5" y="-1730.4026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local t = lp.map[TID]</text>
<text text-anchor="middle" x="5439.5" y="-1715.0026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(t~=nil) then lp.map[TID] = nil end</text>
<text text-anchor="middle" x="5439.5" y="-1699.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45;assert(lp:exists(TID),&quot;no persistent table has the TID &quot;..TID)</text>
<text text-anchor="middle" x="5439.5" y="-1684.2025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_delt:reset()==sqlite3.OK,&quot;db reset error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-1668.8025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_delt:bind(1,TID)==sqlite3.OK,&quot;db TID bind error&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-1653.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local rc = lp.vm_delt:step()</text>
<text text-anchor="middle" x="5439.5" y="-1638.0024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_delt:reset() &#45;&#45; releases locks afer step</text>
<text text-anchor="middle" x="5439.5" y="-1622.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return(rc)</text>
<text text-anchor="middle" x="5439.5" y="-1607.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; to do: what is rc supposed to be? 101</text>
<text text-anchor="middle" x="5439.5" y="-1591.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45;return t</text>
<text text-anchor="middle" x="5439.5" y="-1576.4023" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-1545.0023" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.open = function (dbname)</text>
<text text-anchor="middle" x="5439.5" y="-1529.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local lp = {}</text>
<text text-anchor="middle" x="5439.5" y="-1514.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.LPT = true &#45;&#45; a tag</text>
<text text-anchor="middle" x="5439.5" y="-1498.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.seq = 0 &#45;&#45; tid generator &#45;&#45; would be nice to select max (TID) where TID like &#39;tid%&#39;</text>
<text text-anchor="middle" x="5439.5" y="-1483.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.db = assert(sqlite3.open(dbname))</text>
<text text-anchor="middle" x="5439.5" y="-1468.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; initialize the db; ignore error from CREATE as it may already have been done</text>
<text text-anchor="middle" x="5439.5" y="-1452.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local err,str = lp.db:exec(&quot;create table luat (TID,Key,Kyp,Val,Vyp, primary key (TID,Key,Kyp) on conflict replace)&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-1437.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if (err==26) then</text>
<text text-anchor="middle" x="5439.5" y="-1421.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;lp.db:close() &#45;&#45; bad database format</text>
<text text-anchor="middle" x="5439.5" y="-1406.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return nil,str</text>
<text text-anchor="middle" x="5439.5" y="-1391.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="5439.5" y="-1375.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_new = assert(lp.db:compile(&quot;insert into luat values (?,?,?,?,?)&quot;))</text>
<text text-anchor="middle" x="5439.5" y="-1360.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_del = assert(lp.db:compile(&quot;delete from luat where TID=? and Key=? and Kyp=?&quot;))</text>
<text text-anchor="middle" x="5439.5" y="-1344.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_get = assert(lp.db:compile(&quot;select Val,Vyp from luat where TID=? and Key=? and Kyp=?&quot;))</text>
<text text-anchor="middle" x="5439.5" y="-1329.4018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45;lp.vm_set = assert(lp.db:compile(&quot;update luat set Val=?,Vyp=? where TID=? and Key=? and Kyp=?&quot;))</text>
<text text-anchor="middle" x="5439.5" y="-1314.0018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_delt = assert(lp.db:compile(&quot;delete from luat where TID=?&quot;))</text>
<text text-anchor="middle" x="5439.5" y="-1298.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; convenience oo functions</text>
<text text-anchor="middle" x="5439.5" y="-1283.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.new_table = persist.new_table</text>
<text text-anchor="middle" x="5439.5" y="-1267.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.get_table = persist.get_table</text>
<text text-anchor="middle" x="5439.5" y="-1252.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.set_table = persist.set_table</text>
<text text-anchor="middle" x="5439.5" y="-1237.0017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.cache = persist.cache</text>
<text text-anchor="middle" x="5439.5" y="-1221.6016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.exists = persist.exists</text>
<text text-anchor="middle" x="5439.5" y="-1206.2016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.delete_table = persist.delete_table</text>
<text text-anchor="middle" x="5439.5" y="-1190.8016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.close = persist.close</text>
<text text-anchor="middle" x="5439.5" y="-1175.4015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; initialize the in&#45;memory map</text>
<text text-anchor="middle" x="5439.5" y="-1160.0015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.map = {}</text>
<text text-anchor="middle" x="5439.5" y="-1144.6015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;setmetatable(lp.map,{[&quot;__mode&quot;]=&quot;v&quot;}) &#45;&#45; weak on values</text>
<text text-anchor="middle" x="5439.5" y="-1129.2014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return lp</text>
<text text-anchor="middle" x="5439.5" y="-1113.8014" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-1098.4014" font-family="Inconsolata" font-size="14.00" fill="#000000">Examples:</text>
<text text-anchor="middle" x="5439.5" y="-1067.0013" font-family="Inconsolata" font-size="14.00" fill="#000000">require &quot;luapersist3&quot;</text>
<text text-anchor="middle" x="5439.5" y="-1035.6013" font-family="Inconsolata" font-size="14.00" fill="#000000">lp=assert(persist.open&quot;ptest.db&quot;) &#45;&#45; or &#45;&#45;</text>
<text text-anchor="middle" x="5439.5" y="-1020.2013" font-family="Inconsolata" font-size="14.00" fill="#000000">lp=assert(persist.open&quot;:memory:&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-988.8012" font-family="Inconsolata" font-size="14.00" fill="#000000">t=lp:new_table(&quot;foo&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-957.4012" font-family="Inconsolata" font-size="14.00" fill="#000000">assert(t==lp.map.foo)</text>
<text text-anchor="middle" x="5439.5" y="-926.0012" font-family="Inconsolata" font-size="14.00" fill="#000000">t[&quot;baz&quot;] = 7</text>
<text text-anchor="middle" x="5439.5" y="-894.6012" font-family="Inconsolata" font-size="14.00" fill="#000000">for TID,Key,Kyp,Val,Vyp in lp.db:urows(&quot;SELECT * FROM luat&quot;) do</text>
<text text-anchor="middle" x="5439.5" y="-879.2011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;print(TID, Key, Kyp, Val, Vyp) end</text>
<text text-anchor="middle" x="5439.5" y="-847.8011" font-family="Inconsolata" font-size="14.00" fill="#000000">t[&quot;baz&quot;] = 9</text>
<text text-anchor="middle" x="5439.5" y="-832.4011" font-family="Inconsolata" font-size="14.00" fill="#000000">t[&quot;bar&quot;] = 9</text>
<text text-anchor="middle" x="5439.5" y="-817.001" font-family="Inconsolata" font-size="14.00" fill="#000000">t[&quot;baz&quot;] = 3</text>
<text text-anchor="middle" x="5439.5" y="-785.601" font-family="Inconsolata" font-size="14.00" fill="#000000">t.tt = {[&quot;a&quot;]=1,[&quot;b&quot;]=2}</text>
<text text-anchor="middle" x="5439.5" y="-754.201" font-family="Inconsolata" font-size="14.00" fill="#000000">tt[{1,2,3}]=&quot;t123&quot; &#45;&#45; error</text>
<text text-anchor="middle" x="5439.5" y="-722.8009" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; close and open</text>
<text text-anchor="middle" x="5439.5" y="-691.4009" font-family="Inconsolata" font-size="14.00" fill="#000000">t=lp:get_table(&quot;foo&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-660.0009" font-family="Inconsolata" font-size="14.00" fill="#000000">for Key,Kyp,Val,Vyp</text>
<text text-anchor="middle" x="5439.5" y="-644.6008" font-family="Inconsolata" font-size="14.00" fill="#000000"> in lp.db:urows(&quot;SELECT Key,Kyp,Val,Vyp FROM luat where TID=&#39;foo&#39;&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-629.2008" font-family="Inconsolata" font-size="14.00" fill="#000000"> do print(Key, Kyp, Val, Vyp) end</text>
<text text-anchor="middle" x="5439.5" y="-597.8008" font-family="Inconsolata" font-size="14.00" fill="#000000">lp:cache&quot;foo&quot;</text>
<text text-anchor="middle" x="5439.5" y="-566.4007" font-family="Inconsolata" font-size="14.00" fill="#000000">ca = assert(getmetatable(t).__lpt_cache,&quot;there is no __lpt_cache for this persistent table&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-535.0007" font-family="Inconsolata" font-size="14.00" fill="#000000">for k,v in pairs(ca) do print(k,v) end</text>
<text text-anchor="middle" x="5439.5" y="-503.6007" font-family="Inconsolata" font-size="14.00" fill="#000000">=t.tt.a</text>
<text text-anchor="middle" x="5439.5" y="-472.2007" font-family="Inconsolata" font-size="14.00" fill="#000000">t[&quot;123\000567&quot;]=&quot;abc\000efg&quot;</text>
<text text-anchor="middle" x="5439.5" y="-440.8006" font-family="Inconsolata" font-size="14.00" fill="#000000">for k,v in pairs(ca)</text>
<text text-anchor="middle" x="5439.5" y="-425.4006" font-family="Inconsolata" font-size="14.00" fill="#000000"> do local x = 0</text>
<text text-anchor="middle" x="5439.5" y="-410.0006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if(type(v)==&#39;string&#39;) then x = string.len (v) end</text>
<text text-anchor="middle" x="5439.5" y="-394.6005" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;print(k,v,string.len(k),x)</text>
<text text-anchor="middle" x="5439.5" y="-379.2005" font-family="Inconsolata" font-size="14.00" fill="#000000"> end</text>
<text text-anchor="middle" x="5439.5" y="-347.8005" font-family="Inconsolata" font-size="14.00" fill="#000000">for Key,Kyp,Val,Vyp</text>
<text text-anchor="middle" x="5439.5" y="-332.4004" font-family="Inconsolata" font-size="14.00" fill="#000000"> in lp.db:urows(&quot;SELECT Key,Kyp,Val,Vyp FROM luat where TID=&#39;tid1&#39;&quot;)</text>
<text text-anchor="middle" x="5439.5" y="-317.0004" font-family="Inconsolata" font-size="14.00" fill="#000000"> do print(Key, Kyp, Val, Vyp) end</text>
<text text-anchor="middle" x="5439.5" y="-285.6004" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; debugging</text>
<text text-anchor="middle" x="5439.5" y="-254.2003" font-family="Inconsolata" font-size="14.00" fill="#000000">for r in lp.db:nrows(&quot;SELECT * FROM SQLITE_MASTER&quot;) do</text>
<text text-anchor="middle" x="5439.5" y="-238.8003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;for k,v in pairs(r) do print(k,v) end</text>
<text text-anchor="middle" x="5439.5" y="-223.4003" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="5439.5" y="-192.0002" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; maintanance &#45;&#45; LOSES ALL DATA!</text>
<text text-anchor="middle" x="5439.5" y="-160.6002" font-family="Inconsolata" font-size="14.00" fill="#000000">for r in lp.db:nrows(&quot;DROP TABLE luat&quot;) do</text>
<text text-anchor="middle" x="5439.5" y="-145.2002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;for k,v in pairs(r) do print(k,v) end</text>
<text text-anchor="middle" x="5439.5" y="-129.8002" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_13&#45;&gt;leaf_53 -->
<g id="edge53" class="edge">
<title>codeblock_13&#45;&gt;leaf_53</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M5255.5633,-6342.5261C5255.9618,-6335.7491 5256.4686,-6327.1279 5257.0779,-6316.7651"/>
<polygon fill="#000000" stroke="#000000" points="5260.573,-6316.9498 5257.6661,-6306.7615 5253.5851,-6316.5388 5260.573,-6316.9498"/>
</g>
<!-- leaf_16 -->
<g id="node17" class="node">
<title>leaf_16</title>
<polygon fill="none" stroke="#c0c0c0" points="345,-78.7012 0,-78.7012 0,-6.8989 345,-6.8989 345,-78.7012"/>
<text text-anchor="middle" x="172.5" y="-15.3001" font-family="Inconsolata" font-size="14.00" fill="#000000">There&#39;s doing this, and there&#39;s doing it right.</text>
</g>
<!-- raw_15&#45;&gt;leaf_16 -->
<g id="edge16" class="edge">
<title>raw_15&#45;&gt;leaf_16</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2732.0107,-3195.8929C2738.8921,-2947.3987 2811.2002,-237.7334 2695.5,-121.6001 2649.599,-75.5273 419.0427,-93.5905 354.5,-85.6001 343.4129,-84.2275 332.0172,-82.4504 320.5964,-80.4023"/>
<polygon fill="#000000" stroke="#000000" points="321.0319,-76.9234 310.5605,-78.536 319.7521,-83.8054 321.0319,-76.9234"/>
</g>
<!-- leaf_18 -->
<g id="node19" class="node">
<title>leaf_18</title>
<polygon fill="none" stroke="#c0c0c0" points="911.5,-78.0004 363.5,-78.0004 363.5,-7.5997 911.5,-7.5997 911.5,-78.0004"/>
<text text-anchor="middle" x="637.5" y="-46.7001" font-family="Inconsolata" font-size="14.00" fill="#000000">Doing this right requires Merkelizing all acyclic tables. &#160;It is painstaking</text>
<text text-anchor="middle" x="637.5" y="-31.3001" font-family="Inconsolata" font-size="14.00" fill="#000000">work to define this correctly over functions, threads, userdata and C data,</text>
<text text-anchor="middle" x="637.5" y="-15.9" font-family="Inconsolata" font-size="14.00" fill="#000000">and to do it over cyclic tables requires metadata.</text>
</g>
<!-- raw_17&#45;&gt;leaf_18 -->
<g id="edge18" class="edge">
<title>raw_17&#45;&gt;leaf_18</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2804.0092,-3195.8944C2810.8701,-2947.4205 2882.9612,-237.9711 2767.5,-121.6001 2731.3573,-85.1726 971.6309,-89.9461 920.5,-85.6001 900.7145,-83.9184 880.2102,-81.7188 859.6937,-79.204"/>
<polygon fill="#000000" stroke="#000000" points="859.981,-75.7128 849.6241,-77.9451 859.1126,-82.6587 859.981,-75.7128"/>
</g>
<!-- leaf_20 -->
<g id="node21" class="node">
<title>leaf_20</title>
<polygon fill="none" stroke="#c0c0c0" points="1463.5,-70.1005 929.5,-70.1005 929.5,-15.4996 1463.5,-15.4996 1463.5,-70.1005"/>
<text text-anchor="middle" x="1196.5" y="-39.0001" font-family="Inconsolata" font-size="14.00" fill="#000000">Which is okay. A value reference to an acyclic table is prepared by Merkle</text>
<text text-anchor="middle" x="1196.5" y="-23.6001" font-family="Inconsolata" font-size="14.00" fill="#000000">hashing and referred to by that hash inside the enclosing table.</text>
</g>
<!-- raw_19&#45;&gt;leaf_20 -->
<g id="edge20" class="edge">
<title>raw_19&#45;&gt;leaf_20</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2876.0066,-3195.8969C2882.8335,-2947.4567 2954.5625,-238.3653 2839.5,-121.6001 2786.1765,-67.4876 1548.1627,-92.4349 1472.5,-85.6001 1435.972,-82.3005 1396.9349,-77.2143 1360.0603,-71.6853"/>
<polygon fill="#000000" stroke="#000000" points="1360.1332,-68.1563 1349.721,-70.1152 1359.0822,-75.077 1360.1332,-68.1563"/>
</g>
<!-- leaf_22 -->
<g id="node23" class="node">
<title>leaf_22</title>
<polygon fill="none" stroke="#c0c0c0" points="2037,-85.4011 1482,-85.4011 1482,-.199 2037,-.199 2037,-85.4011"/>
<text text-anchor="middle" x="1759.5" y="-54.4001" font-family="Inconsolata" font-size="14.00" fill="#000000">If they have circular references these must be fixed: each value reference is</text>
<text text-anchor="middle" x="1759.5" y="-39.0001" font-family="Inconsolata" font-size="14.00" fill="#000000">replaced with a deterministic and unique string, each table is then frozen</text>
<text text-anchor="middle" x="1759.5" y="-23.6001" font-family="Inconsolata" font-size="14.00" fill="#000000">once the full cycle graph is resolved, and all hashes are included in the</text>
<text text-anchor="middle" x="1759.5" y="-8.2" font-family="Inconsolata" font-size="14.00" fill="#000000">container as resolutions of those strings.</text>
</g>
<!-- raw_21&#45;&gt;leaf_22 -->
<g id="edge22" class="edge">
<title>raw_21&#45;&gt;leaf_22</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2948.001,-3195.9024C2954.7517,-2947.5368 3025.6708,-239.2374 2911.5,-121.6001 2879.3066,-88.4293 2155.055,-89.9802 2047.3746,-85.3974"/>
<polygon fill="#000000" stroke="#000000" points="2047.405,-81.893 2037.2136,-84.7889 2046.9865,-88.8805 2047.405,-81.893"/>
</g>
<!-- leaf_24 -->
<g id="node25" class="node">
<title>leaf_24</title>
<polygon fill="none" stroke="#c0c0c0" points="2596,-78.0004 2055,-78.0004 2055,-7.5997 2596,-7.5997 2596,-78.0004"/>
<text text-anchor="middle" x="2325.5" y="-46.7001" font-family="Inconsolata" font-size="14.00" fill="#000000">The containers therefore have no cycles and may be hashed also. We&#39;ll need</text>
<text text-anchor="middle" x="2325.5" y="-31.3001" font-family="Inconsolata" font-size="14.00" fill="#000000">the containing format anyway, for metatables, and any other metadata of the</text>
<text text-anchor="middle" x="2325.5" y="-15.9" font-family="Inconsolata" font-size="14.00" fill="#000000">sort that is deterministic to the value and not the reference or instance.</text>
</g>
<!-- raw_23&#45;&gt;leaf_24 -->
<g id="edge24" class="edge">
<title>raw_23&#45;&gt;leaf_24</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3019.981,-3195.9213C3026.461,-2947.8115 3094.5042,-242.2299 2983.5,-121.6001 2954.8566,-90.473 2646.4787,-90.8093 2604.5,-85.6001 2588.8943,-83.6636 2572.8172,-81.54 2556.6319,-79.3068"/>
<polygon fill="#000000" stroke="#000000" points="2556.9306,-75.8147 2546.5436,-77.9028 2555.9656,-82.7479 2556.9306,-75.8147"/>
</g>
<!-- leaf_29 -->
<g id="node30" class="node">
<title>leaf_29</title>
<polygon fill="none" stroke="#c0c0c0" points="3155,-70.1005 2614,-70.1005 2614,-15.4996 3155,-15.4996 3155,-70.1005"/>
<text text-anchor="middle" x="2884.5" y="-39.0001" font-family="Inconsolata" font-size="14.00" fill="#000000">Fortunately Lua has only the one level of reference, sparing us the need to</text>
<text text-anchor="middle" x="2884.5" y="-23.6001" font-family="Inconsolata" font-size="14.00" fill="#000000">serialize pointers to addresses and so on to the nth degree. </text>
</g>
<!-- raw_25&#45;&gt;leaf_29 -->
<g id="edge29" class="edge">
<title>raw_25&#45;&gt;leaf_29</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3091.8432,-3196.0282C3096.4589,-2949.364 3144.6944,-259.1423 3055.5,-121.6001 3042.213,-101.111 3022.1184,-85.8696 3000.3209,-74.558"/>
<polygon fill="#000000" stroke="#000000" points="3001.7477,-71.3595 2991.2276,-70.1028 2998.6679,-77.6456 3001.7477,-71.3595"/>
</g>
<!-- leaf_30 -->
<g id="node31" class="node">
<title>leaf_30</title>
<polygon fill="none" stroke="#c0c0c0" points="3227.5,-60.8001 3173.5,-60.8001 3173.5,-24.8001 3227.5,-24.8001 3227.5,-60.8001"/>
<text text-anchor="middle" x="3200.5" y="-39.3001" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_26&#45;&gt;leaf_30 -->
<g id="edge30" class="edge">
<title>prespace_26&#45;&gt;leaf_30</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3182.6035,-3195.8782C3183.9793,-2953.4744 3198.643,-369.9814 3200.3401,-70.9703"/>
<polygon fill="#000000" stroke="#000000" points="3203.8401,-70.96 3200.397,-60.9402 3196.8402,-70.9202 3203.8401,-70.96"/>
</g>
<!-- leaf_31 -->
<g id="node32" class="node">
<title>leaf_31</title>
<polygon fill="none" stroke="#c0c0c0" points="3299.5,-60.8001 3245.5,-60.8001 3245.5,-24.8001 3299.5,-24.8001 3299.5,-60.8001"/>
<text text-anchor="middle" x="3272.5" y="-39.3001" font-family="Inconsolata" font-size="14.00" fill="#000000">cdata</text>
</g>
<!-- literal_27&#45;&gt;leaf_31 -->
<g id="edge31" class="edge">
<title>literal_27&#45;&gt;leaf_31</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3278.4655,-3195.8782C3278.0069,-2953.4744 3273.119,-369.9814 3272.5533,-70.9703"/>
<polygon fill="#000000" stroke="#000000" points="3276.0533,-70.9336 3272.5343,-60.9402 3269.0533,-70.9469 3276.0533,-70.9336"/>
</g>
<!-- leaf_32 -->
<g id="node33" class="node">
<title>leaf_32</title>
<polygon fill="none" stroke="#c0c0c0" points="3425,-62.1006 3318,-62.1006 3318,-23.4995 3425,-23.4995 3425,-62.1006"/>
<text text-anchor="middle" x="3371.5" y="-47.0001" font-family="Inconsolata" font-size="14.00" fill="#000000"> is not</text>
<text text-anchor="middle" x="3371.5" y="-31.6001" font-family="Inconsolata" font-size="14.00" fill="#000000">so limited...</text>
</g>
<!-- raw_28&#45;&gt;leaf_32 -->
<g id="edge32" class="edge">
<title>raw_28&#45;&gt;leaf_32</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3360.5632,-3195.8782C3361.4023,-2953.9708 3370.3285,-380.5542 3371.3958,-72.8362"/>
<polygon fill="#000000" stroke="#000000" points="3374.897,-72.4868 3371.4318,-62.4747 3367.897,-72.4625 3374.897,-72.4868"/>
</g>
<!-- leaf_37 -->
<g id="node38" class="node">
<title>leaf_37</title>
<polygon fill="none" stroke="#c0c0c0" points="3963.5,-78.0004 3443.5,-78.0004 3443.5,-7.5997 3963.5,-7.5997 3963.5,-78.0004"/>
<text text-anchor="middle" x="3703.5" y="-46.7001" font-family="Inconsolata" font-size="14.00" fill="#000000">For the near future I&#39;m more interested in storing a naive string</text>
<text text-anchor="middle" x="3703.5" y="-31.3001" font-family="Inconsolata" font-size="14.00" fill="#000000">representation of results, than something which can be round&#45;tripped and</text>
<text text-anchor="middle" x="3703.5" y="-15.9" font-family="Inconsolata" font-size="14.00" fill="#000000">deduplicated in a generalized way, and I suspect</text>
</g>
<!-- raw_33&#45;&gt;leaf_37 -->
<g id="edge37" class="edge">
<title>raw_33&#45;&gt;leaf_37</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3798.9482,-3195.8782C3791.7335,-2957.5447 3716.0107,-456.0823 3704.8665,-87.9432"/>
<polygon fill="#000000" stroke="#000000" points="3708.3643,-87.8112 3704.5632,-77.9217 3701.3675,-88.0231 3708.3643,-87.8112"/>
</g>
<!-- leaf_38 -->
<g id="node39" class="node">
<title>leaf_38</title>
<polygon fill="none" stroke="#c0c0c0" points="4035.5,-60.8001 3981.5,-60.8001 3981.5,-24.8001 4035.5,-24.8001 4035.5,-60.8001"/>
<text text-anchor="middle" x="4008.5" y="-39.3001" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_34&#45;&gt;leaf_38 -->
<g id="edge38" class="edge">
<title>prespace_34&#45;&gt;leaf_38</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M3986.6264,-3195.8782C3988.3081,-2953.4744 4006.2303,-369.9814 4008.3046,-70.9703"/>
<polygon fill="#000000" stroke="#000000" points="4011.8046,-70.9643 4008.3742,-60.9402 4004.8048,-70.9157 4011.8046,-70.9643"/>
</g>
<!-- leaf_39 -->
<g id="node40" class="node">
<title>leaf_39</title>
<polygon fill="none" stroke="#c0c0c0" points="4111.5,-60.8001 4053.5,-60.8001 4053.5,-24.8001 4111.5,-24.8001 4111.5,-60.8001"/>
<text text-anchor="middle" x="4082.5" y="-39.3001" font-family="Inconsolata" font-size="14.00" fill="#000000">fossil</text>
</g>
<!-- literal_35&#45;&gt;leaf_39 -->
<g id="edge39" class="edge">
<title>literal_35&#45;&gt;leaf_39</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4082.5,-3195.8782C4082.5,-2953.4744 4082.5,-369.9814 4082.5,-70.9703"/>
<polygon fill="#000000" stroke="#000000" points="4086.0001,-70.9402 4082.5,-60.9402 4079.0001,-70.9403 4086.0001,-70.9402"/>
</g>
<!-- leaf_40 -->
<g id="node41" class="node">
<title>leaf_40</title>
<polygon fill="none" stroke="#c0c0c0" points="4531,-62.1006 4130,-62.1006 4130,-23.4995 4531,-23.4995 4531,-62.1006"/>
<text text-anchor="middle" x="4330.5" y="-47.0001" font-family="Inconsolata" font-size="14.00" fill="#000000"> is doing a lot of</text>
<text text-anchor="middle" x="4330.5" y="-31.6001" font-family="Inconsolata" font-size="14.00" fill="#000000">the heavy lifting for this kind of persistence already.</text>
</g>
<!-- raw_36&#45;&gt;leaf_40 -->
<g id="edge40" class="edge">
<title>raw_36&#45;&gt;leaf_40</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4244.9943,-3195.8782C4251.5544,-2953.9708 4321.3407,-380.5542 4329.6855,-72.8362"/>
<polygon fill="#000000" stroke="#000000" points="4333.194,-72.566 4329.9665,-62.4747 4326.1966,-72.3761 4333.194,-72.566"/>
</g>
<!-- leaf_45 -->
<g id="node46" class="node">
<title>leaf_45</title>
<polygon fill="none" stroke="#c0c0c0" points="4628,-62.7021 4549,-62.7021 4549,-22.898 4628,-22.898 4628,-62.7021"/>
<text text-anchor="middle" x="4588.5" y="-31.3001" font-family="Inconsolata" font-size="14.00" fill="#000000">To get it</text>
</g>
<!-- raw_41&#45;&gt;leaf_45 -->
<g id="edge45" class="edge">
<title>raw_41&#45;&gt;leaf_45</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4573.5862,-3195.8782C4574.7298,-2954.0949 4586.89,-383.1944 4588.3557,-73.3117"/>
<polygon fill="#000000" stroke="#000000" points="4591.8576,-72.8842 4588.4051,-62.8678 4584.8577,-72.8511 4591.8576,-72.8842"/>
</g>
<!-- leaf_46 -->
<g id="node47" class="node">
<title>leaf_46</title>
<polygon fill="none" stroke="#c0c0c0" points="4700.5,-60.8001 4646.5,-60.8001 4646.5,-24.8001 4700.5,-24.8001 4700.5,-60.8001"/>
<text text-anchor="middle" x="4673.5" y="-39.3001" font-family="Inconsolata" font-size="14.00" fill="#000000"> </text>
</g>
<!-- prespace_42&#45;&gt;leaf_46 -->
<g id="edge46" class="edge">
<title>prespace_42&#45;&gt;leaf_46</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4664.5517,-3195.8782C4665.2397,-2953.4744 4672.5715,-369.9814 4673.4201,-70.9703"/>
<polygon fill="#000000" stroke="#000000" points="4676.92,-70.9502 4673.4485,-60.9402 4669.9201,-70.9302 4676.92,-70.9502"/>
</g>
<!-- leaf_47 -->
<g id="node48" class="node">
<title>leaf_47</title>
<polygon fill="none" stroke="#c0c0c0" points="4776.5,-60.8001 4718.5,-60.8001 4718.5,-24.8001 4776.5,-24.8001 4776.5,-60.8001"/>
<text text-anchor="middle" x="4747.5" y="-39.3001" font-family="Inconsolata" font-size="14.00" fill="#000000">really</text>
</g>
<!-- italic_43&#45;&gt;leaf_47 -->
<g id="edge47" class="edge">
<title>italic_43&#45;&gt;leaf_47</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4756.4483,-3195.8782C4755.7603,-2953.4744 4748.4285,-369.9814 4747.5799,-70.9703"/>
<polygon fill="#000000" stroke="#000000" points="4751.0799,-70.9302 4747.5515,-60.9402 4744.08,-70.9502 4751.0799,-70.9302"/>
</g>
<!-- leaf_48 -->
<g id="node49" class="node">
<title>leaf_48</title>
<polygon fill="none" stroke="#c0c0c0" points="5322,-70.0005 4795,-70.0005 4795,-15.5996 5322,-15.5996 5322,-70.0005"/>
<text text-anchor="middle" x="5058.5" y="-54.7001" font-family="Inconsolata" font-size="14.00" fill="#000000"> right will involve normalizing the whitespace (but not</text>
<text text-anchor="middle" x="5058.5" y="-39.3001" font-family="Inconsolata" font-size="14.00" fill="#000000">values) of function strings, following upvalues and tree&#45;shaking until we</text>
<text text-anchor="middle" x="5058.5" y="-23.9" font-family="Inconsolata" font-size="14.00" fill="#000000">have a hash to go with each one.</text>
</g>
<!-- raw_44&#45;&gt;leaf_48 -->
<g id="edge48" class="edge">
<title>raw_44&#45;&gt;leaf_48</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4829.1378,-3196.0155C4824.2642,-2949.1801 4773.2892,-257.1385 4865.5,-121.6001 4879.6082,-100.8628 4900.2215,-85.5783 4922.784,-74.3141"/>
<polygon fill="#000000" stroke="#000000" points="4924.3068,-77.4657 4931.8614,-70.0375 4921.3234,-71.1332 4924.3068,-77.4657"/>
</g>
<!-- leaf_50 -->
<g id="node51" class="node">
<title>leaf_50</title>
<polygon fill="none" stroke="#c0c0c0" points="5888.5,-78.0004 5340.5,-78.0004 5340.5,-7.5997 5888.5,-7.5997 5888.5,-78.0004"/>
<text text-anchor="middle" x="5614.5" y="-46.7001" font-family="Inconsolata" font-size="14.00" fill="#000000">The result will be pretty butch though: a SHA&#45;3 hash that would refer to the</text>
<text text-anchor="middle" x="5614.5" y="-31.3001" font-family="Inconsolata" font-size="14.00" fill="#000000">same object consistently across LuaJIT codebases. &#160;Dedup and content&#45;centric</text>
<text text-anchor="middle" x="5614.5" y="-15.9" font-family="Inconsolata" font-size="14.00" fill="#000000">references don&#39;t have to be just for the big bois.</text>
</g>
<!-- raw_49&#45;&gt;leaf_50 -->
<g id="edge50" class="edge">
<title>raw_49&#45;&gt;leaf_50</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4901.0177,-3195.9201C4894.5204,-2947.7944 4826.2936,-242.0436 4937.5,-121.6001 4967.2463,-89.3831 5286.9683,-90.8696 5330.5,-85.6001 5346.3848,-83.6773 5362.7497,-81.564 5379.2247,-79.3382"/>
<polygon fill="#000000" stroke="#000000" points="5380.058,-82.7571 5389.4937,-77.9385 5379.1126,-75.8212 5380.058,-82.7571"/>
</g>
<!-- leaf_52 -->
<g id="node53" class="node">
<title>leaf_52</title>
<polygon fill="none" stroke="#c0c0c0" points="6434,-78.0004 5907,-78.0004 5907,-7.5997 6434,-7.5997 6434,-78.0004"/>
<text text-anchor="middle" x="6170.5" y="-46.7001" font-family="Inconsolata" font-size="14.00" fill="#000000">The below is from the Wiki. It has some decent ideas for ordinary table</text>
<text text-anchor="middle" x="6170.5" y="-31.3001" font-family="Inconsolata" font-size="14.00" fill="#000000">persistence, though it must be adapted to the LuaJIT SQLite library we&#39;re</text>
<text text-anchor="middle" x="6170.5" y="-15.9" font-family="Inconsolata" font-size="14.00" fill="#000000">using.</text>
</g>
<!-- raw_51&#45;&gt;leaf_52 -->
<g id="edge52" class="edge">
<title>raw_51&#45;&gt;leaf_52</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M4972.9986,-3195.902C4966.2428,-2947.5314 4895.2688,-239.1787 5009.5,-121.6001 5043.9049,-86.1871 5848.3631,-90.4317 5897.5,-85.6001 5915.4084,-83.8392 5933.9296,-81.6755 5952.4997,-79.2648"/>
<polygon fill="#000000" stroke="#000000" points="5953.0581,-82.7215 5962.5136,-77.942 5952.1413,-75.7818 5953.0581,-82.7215"/>
</g>
</g>
</svg>
