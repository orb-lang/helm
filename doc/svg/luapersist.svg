<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: lpegNode Pages: 1 -->
<svg width="1200pt" height="6481pt"
 viewBox="0.00 0.00 1200.32 6481.01" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 6477.0108)">
<title>lpegNode</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-6477.0108 1196.3169,-6477.0108 1196.3169,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="319.3169" cy="-6455.0108" rx="46.9581" ry="18"/>
<text text-anchor="middle" x="319.3169" y="-6450.8108" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">doc &#45; 403</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="319.3169" cy="-6383.0108" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="319.3169" y="-6378.8108" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1&#45;403</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M319.3169,-6436.8421C319.3169,-6429.1417 319.3169,-6419.9851 319.3169,-6411.4274"/>
<polygon fill="#000000" stroke="#000000" points="322.817,-6411.424 319.3169,-6401.424 315.817,-6411.4241 322.817,-6411.424"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="134.3169" cy="-6311.0108" rx="134.1341" ry="18"/>
<text text-anchor="middle" x="134.3169" y="-6306.8108" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">1 : Table persistence via SQLite</text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M281.433,-6368.2668C254.4382,-6357.7607 217.7748,-6343.4917 187.8025,-6331.8268"/>
<polygon fill="#000000" stroke="#000000" points="188.9156,-6328.5043 178.327,-6328.139 186.3767,-6335.0277 188.9156,-6328.5043"/>
</g>
<!-- prose_3 -->
<g id="node4" class="node">
<title>prose_3</title>
<ellipse fill="none" stroke="#000000" cx="319.3169" cy="-6311.0108" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="319.3169" y="-6306.8108" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;prose_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M319.3169,-6364.8421C319.3169,-6357.1417 319.3169,-6347.9851 319.3169,-6339.4274"/>
<polygon fill="#000000" stroke="#000000" points="322.817,-6339.424 319.3169,-6329.424 315.817,-6339.4241 322.817,-6339.424"/>
</g>
<!-- codeblock_4 -->
<g id="node5" class="node">
<title>codeblock_4</title>
<ellipse fill="none" stroke="#000000" cx="602.3169" cy="-6311.0108" rx="77.4211" ry="18"/>
<text text-anchor="middle" x="602.3169" y="-6306.8108" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 3&#45;403</text>
</g>
<!-- section_1&#45;&gt;codeblock_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;codeblock_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M367.6448,-6370.7153C415.252,-6358.6032 488.1894,-6340.0468 540.1028,-6326.8391"/>
<polygon fill="#000000" stroke="#000000" points="541.0374,-6330.2129 549.8657,-6324.3553 539.3114,-6323.429 541.0374,-6330.2129"/>
</g>
<!-- leaf_5 -->
<g id="node6" class="node">
<title>leaf_5</title>
<polygon fill="none" stroke="#c0c0c0" points="247.3169,-3182.5054 21.3169,-3182.5054 21.3169,-3146.5054 247.3169,-3146.5054 247.3169,-3182.5054"/>
<text text-anchor="middle" x="134.3169" y="-3161.0054" font-family="Inconsolata" font-size="14.00" fill="#000000">* Table persistence via SQLite</text>
</g>
<!-- header_2&#45;&gt;leaf_5 -->
<g id="edge5" class="edge">
<title>header_2&#45;&gt;leaf_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M134.3169,-6292.926C134.3169,-6052.5409 134.3169,-3491.7525 134.3169,-3192.9128"/>
<polygon fill="#000000" stroke="#000000" points="137.817,-3192.8787 134.3169,-3182.8787 130.817,-3192.8787 137.817,-3192.8787"/>
</g>
<!-- raw_6 -->
<g id="node7" class="node">
<title>raw_6</title>
<ellipse fill="none" stroke="#000000" cx="305.3169" cy="-3164.5054" rx="27" ry="18"/>
<text text-anchor="middle" x="305.3169" y="-3160.3054" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_3&#45;&gt;raw_6 -->
<g id="edge6" class="edge">
<title>prose_3&#45;&gt;raw_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M319.2365,-6292.926C318.1669,-6052.5409 306.773,-3491.7525 305.4433,-3192.9128"/>
<polygon fill="#000000" stroke="#000000" points="308.9432,-3192.863 305.3987,-3182.8787 301.9433,-3192.8942 308.9432,-3192.863"/>
</g>
<!-- leaf_8 -->
<g id="node9" class="node">
<title>leaf_8</title>
<polygon fill="none" stroke="#c0c0c0" points="1192.3169,-6257.0162 350.3169,-6257.0162 350.3169,-71.9946 1192.3169,-71.9946 1192.3169,-6257.0162"/>
<text text-anchor="middle" x="771.3169" y="-6241.8108" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45;[[ luapersist3.lua &#160;2004&#45;Aug&#45;31 e</text>
<text text-anchor="middle" x="771.3169" y="-6210.4107" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;The author disclaims copyright to this source code. &#160;In place of</text>
<text text-anchor="middle" x="771.3169" y="-6195.0107" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;a legal notice, here is a blessing:</text>
<text text-anchor="middle" x="771.3169" y="-6179.6107" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;May you be healthy and well.</text>
<text text-anchor="middle" x="771.3169" y="-6164.2106" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;May you be free of all suffering.</text>
<text text-anchor="middle" x="771.3169" y="-6148.8106" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;May you be happy, giving more than you take.</text>
<text text-anchor="middle" x="771.3169" y="-6117.4106" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Lua Persistent Tables</text>
<text text-anchor="middle" x="771.3169" y="-6102.0105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;loosely based on the wiki page http://lua&#45;users.org/wiki/PersistentTables</text>
<text text-anchor="middle" x="771.3169" y="-6086.6105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;uses Lua SQLite 3 (see http://luaforge.net/projects/luasqlite/)</text>
<text text-anchor="middle" x="771.3169" y="-6071.2105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;handles circular structures</text>
<text text-anchor="middle" x="771.3169" y="-6039.8105" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;DB Schema</text>
<text text-anchor="middle" x="771.3169" y="-6024.4104" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;the Lua tables are stored in a single SQL table with five columns</text>
<text text-anchor="middle" x="771.3169" y="-6009.0104" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;TID : Table ID that identifies the Lua table &#45;&#45; string</text>
<text text-anchor="middle" x="771.3169" y="-5993.6104" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Key : index in the Lua Table &#45;&#45; TID, string, number, or boolean</text>
<text text-anchor="middle" x="771.3169" y="-5978.2103" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Kyp : the data type of Key</text>
<text text-anchor="middle" x="771.3169" y="-5962.8103" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Val : value in the Lua Table at index &#45;&#45; TID, string, number, or boolean</text>
<text text-anchor="middle" x="771.3169" y="-5947.4103" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Vyp : the data type of Val</text>
<text text-anchor="middle" x="771.3169" y="-5916.0102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;A row is created for each Lua Persistent Table to reserve its TID.</text>
<text text-anchor="middle" x="771.3169" y="-5900.6102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;The Key, Kyp, Val, and Vyp columns are all set to &quot;_&quot;.</text>
<text text-anchor="middle" x="771.3169" y="-5869.2102" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Both Kyp and Vyp use the following encoding:</text>
<text text-anchor="middle" x="771.3169" y="-5853.8101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;b&quot; &#45;&#45; boolean (Key/Val = &quot;t&quot; or &quot;f&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-5838.4101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;n&quot; &#45;&#45; number</text>
<text text-anchor="middle" x="771.3169" y="-5823.0101" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;t&quot; &#45;&#45; TID</text>
<text text-anchor="middle" x="771.3169" y="-5807.61" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;s&quot; &#45;&#45; string</text>
<text text-anchor="middle" x="771.3169" y="-5792.21" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;e&quot; &#45;&#45; encoded string (the raw string has embedded NULs)</text>
<text text-anchor="middle" x="771.3169" y="-5776.81" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&quot;_&quot; &#45;&#45; null</text>
<text text-anchor="middle" x="771.3169" y="-5745.41" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Caveats</text>
<text text-anchor="middle" x="771.3169" y="-5730.0099" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;1. Strings used for Key and Val may contain embedded &#39;\0&#39; NUL characters;</text>
<text text-anchor="middle" x="771.3169" y="-5714.6099" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;they are stored using sqlite blobs.</text>
<text text-anchor="middle" x="771.3169" y="-5699.2099" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;Strings used for TIDs must not have embedded NULs.</text>
<text text-anchor="middle" x="771.3169" y="-5683.8098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;2. A table may not be used as a key unless the table is already persistent;</text>
<text text-anchor="middle" x="771.3169" y="-5668.4098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;tables may always be used as vals.</text>
<text text-anchor="middle" x="771.3169" y="-5653.0098" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;3. Functions, threads, and userdata are not supported as keys or vals.</text>
<text text-anchor="middle" x="771.3169" y="-5637.6097" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;4. Lua Persistent Tables may not have user metatables (they will not be</text>
<text text-anchor="middle" x="771.3169" y="-5622.2097" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;persisted, and they may conflict with Lua Persistent Table events).</text>
<text text-anchor="middle" x="771.3169" y="-5590.8097" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Implementation</text>
<text text-anchor="middle" x="771.3169" y="-5559.4096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Lua Persistent Tables are represented by an empty Lua Table and a</text>
<text text-anchor="middle" x="771.3169" y="-5544.0096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;corresponding metatable.</text>
<text text-anchor="middle" x="771.3169" y="-5512.6096" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Lua Persistent Table Metatable events:</text>
<text text-anchor="middle" x="771.3169" y="-5497.2095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;lpt_TID&quot; &#45;&#45; the TID for this table</text>
<text text-anchor="middle" x="771.3169" y="-5481.8095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;index&quot; &#45;&#45; handler for unmarshalling Key/Val from the DB</text>
<text text-anchor="middle" x="771.3169" y="-5466.4095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;newindex&quot; &#45;&#45; handler for marshalling Key/Val to the DB</text>
<text text-anchor="middle" x="771.3169" y="-5451.0095" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;lpt_cache&quot; &#45;&#45; a Lua Table that caches Key/Val pairs</text>
<text text-anchor="middle" x="771.3169" y="-5435.6094" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;lpt_db&quot; &#45;&#45; the Lua Persistent Table database descriptor for this table&#39;s db</text>
<text text-anchor="middle" x="771.3169" y="-5404.2094" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;LuaPersist maintains one global weak table, map, that is used to find</text>
<text text-anchor="middle" x="771.3169" y="-5388.8094" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;Lua Persistent Tables that are already open. This insures that there</text>
<text text-anchor="middle" x="771.3169" y="-5373.4093" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;is at most one version of each Lua Persistent Table in memory.</text>
<text text-anchor="middle" x="771.3169" y="-5358.0093" font-family="Inconsolata" font-size="14.00" fill="#000000">]]</text>
<text text-anchor="middle" x="771.3169" y="-5326.6093" font-family="Inconsolata" font-size="14.00" fill="#000000">require &quot;sqlite3&quot;</text>
<text text-anchor="middle" x="771.3169" y="-5295.2092" font-family="Inconsolata" font-size="14.00" fill="#000000">persist = {}</text>
<text text-anchor="middle" x="771.3169" y="-5263.8092" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_make_TID = function (lp,tbl)</text>
<text text-anchor="middle" x="771.3169" y="-5248.4092" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; return &quot;TID&quot;..math.random() &#45;&#45; fix me: confirm it&#39;s unique</text>
<text text-anchor="middle" x="771.3169" y="-5233.0091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local TID</text>
<text text-anchor="middle" x="771.3169" y="-5217.6091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;repeat</text>
<text text-anchor="middle" x="771.3169" y="-5202.2091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;lp.seq = lp.seq + 1</text>
<text text-anchor="middle" x="771.3169" y="-5186.8091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;TID = string.format(&#39;tid%d&#39;,lp.seq)</text>
<text text-anchor="middle" x="771.3169" y="-5171.409" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;until(not lp:exists(TID))</text>
<text text-anchor="middle" x="771.3169" y="-5156.009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return TID</text>
<text text-anchor="middle" x="771.3169" y="-5140.609" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-5109.2089" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_val_vyp = function (lp,k)</text>
<text text-anchor="middle" x="771.3169" y="-5093.8089" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local ty = type(k)</text>
<text text-anchor="middle" x="771.3169" y="-5078.4089" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;string&quot;) then</text>
<text text-anchor="middle" x="771.3169" y="-5063.0088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if(string.find(k,&quot;%z&quot;)) then</text>
<text text-anchor="middle" x="771.3169" y="-5047.6088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return k,&quot;e&quot;</text>
<text text-anchor="middle" x="771.3169" y="-5032.2088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;else</text>
<text text-anchor="middle" x="771.3169" y="-5016.8087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;return k,&quot;s&quot;</text>
<text text-anchor="middle" x="771.3169" y="-5001.4087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="771.3169" y="-4986.0087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="771.3169" y="-4970.6086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;number&quot;) then return tostring(k),&quot;n&quot; end</text>
<text text-anchor="middle" x="771.3169" y="-4955.2086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;boolean&quot;) then if k then v=&quot;t&quot; else v=&quot;f&quot; end return v,&quot;b&quot; end</text>
<text text-anchor="middle" x="771.3169" y="-4939.8086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;table&quot;) then</text>
<text text-anchor="middle" x="771.3169" y="-4924.4086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local mt = getmetatable(k)</text>
<text text-anchor="middle" x="771.3169" y="-4909.0085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local TID</text>
<text text-anchor="middle" x="771.3169" y="-4893.6085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if(mt~=nil) then TID = mt.__lpt_TID end</text>
<text text-anchor="middle" x="771.3169" y="-4878.2085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if(mt==nil or TID==nil) then</text>
<text text-anchor="middle" x="771.3169" y="-4862.8084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;TID = _persist_make_TID(lp,k)</text>
<text text-anchor="middle" x="771.3169" y="-4847.4084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local t = persist.new_table(lp,TID)</text>
<text text-anchor="middle" x="771.3169" y="-4832.0084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;persist.set_table(lp,TID,k)</text>
<text text-anchor="middle" x="771.3169" y="-4816.6083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="771.3169" y="-4801.2083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return TID,&quot;t&quot;</text>
<text text-anchor="middle" x="771.3169" y="-4785.8083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="771.3169" y="-4770.4082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(nil,&quot;non&#45;persistent type: &quot;..ty..&quot;!?&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-4755.0082" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-4723.6082" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_key_kyp = function (lp,k)</text>
<text text-anchor="middle" x="771.3169" y="-4708.2081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(type(k)==&quot;table&quot;) then</text>
<text text-anchor="middle" x="771.3169" y="-4692.8081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local mt = getmetatable(k)</text>
<text text-anchor="middle" x="771.3169" y="-4677.4081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local TID</text>
<text text-anchor="middle" x="771.3169" y="-4662.0081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if(mt~=nil) then TID = mt.__lpt_TID end</text>
<text text-anchor="middle" x="771.3169" y="-4646.608" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if(mt==nil or TID==nil) then</text>
<text text-anchor="middle" x="771.3169" y="-4631.208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;error(&quot;use of non&#45;persistent table as key not supported&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-4615.808" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="771.3169" y="-4600.4079" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return TID,&quot;t&quot;</text>
<text text-anchor="middle" x="771.3169" y="-4585.0079" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="771.3169" y="-4569.6079" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return _persist_val_vyp(lp,k)</text>
<text text-anchor="middle" x="771.3169" y="-4554.2078" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-4522.8078" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_raw_to_val = function (lp,ty,raw)</text>
<text text-anchor="middle" x="771.3169" y="-4507.4078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;s&quot;) then return raw end</text>
<text text-anchor="middle" x="771.3169" y="-4492.0077" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;n&quot;) then return raw+0 end</text>
<text text-anchor="middle" x="771.3169" y="-4476.6077" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;b&quot;) then return raw==&quot;t&quot; end</text>
<text text-anchor="middle" x="771.3169" y="-4461.2077" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;t&quot;) then return lp:get_table(raw) end</text>
<text text-anchor="middle" x="771.3169" y="-4445.8076" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(ty==&quot;e&quot;) then return raw end</text>
<text text-anchor="middle" x="771.3169" y="-4430.4076" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(nil,&quot;fix me &#45;&#45; what type is: &quot;..ty..&quot;?&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-4415.0076" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-4383.6076" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_vm_setup = function (lp,vm,TID,k)</text>
<text text-anchor="middle" x="771.3169" y="-4368.2075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local key,kyp = _persist_key_kyp(lp,k) &#45;&#45; this must come before vm:reset since it might use vm</text>
<text text-anchor="middle" x="771.3169" y="-4352.8075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(vm:reset()==sqlite3.OK,&quot;db reset error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-4337.4075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(vm:bind(1,TID)==sqlite3.OK,&quot;db TID bind error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-4322.0074" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if kyp==&quot;e&quot;</text>
<text text-anchor="middle" x="771.3169" y="-4306.6074" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;then</text>
<text text-anchor="middle" x="771.3169" y="-4291.2074" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;assert(vm:bind_blob(2,key)==sqlite3.OK,&quot;db Key bind error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-4275.8073" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;else</text>
<text text-anchor="middle" x="771.3169" y="-4260.4073" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;assert(vm:bind(2,key)==sqlite3.OK,&quot;db Key bind error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-4245.0073" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="771.3169" y="-4229.6072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(vm:bind(3,kyp)==sqlite3.OK,&quot;db Kyp bind error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-4214.2072" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-4182.8072" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_index = function (t,k)</text>
<text text-anchor="middle" x="771.3169" y="-4167.4071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(k,&quot;key of nil not permitted&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-4152.0071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local ca = assert(getmetatable(t).__lpt_cache,&quot;there is no __lpt_cache for this persistent table&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-4136.6071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local v = rawget(ca,k)</text>
<text text-anchor="middle" x="771.3169" y="-4121.2071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(v~=nil) then return v end</text>
<text text-anchor="middle" x="771.3169" y="-4105.807" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local lp = assert(getmetatable(t).__lpt_db,&quot;there is no __lpt_db for this persistent table&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-4090.407" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local TID = assert(getmetatable(t).__lpt_TID,&quot;there is no __lpt_TID for this persistent table&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-4075.007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_vm_setup(lp,lp.vm_get,TID,k)</text>
<text text-anchor="middle" x="771.3169" y="-4059.6069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local rc = lp.vm_get:step()</text>
<text text-anchor="middle" x="771.3169" y="-4044.2069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(rc==sqlite3.ROW) then</text>
<text text-anchor="middle" x="771.3169" y="-4028.8069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local da</text>
<text text-anchor="middle" x="771.3169" y="-4013.4068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;da = lp.vm_get:get_values()</text>
<text text-anchor="middle" x="771.3169" y="-3998.0068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;lp.vm_get:reset() &#45;&#45; releases locks afer step</text>
<text text-anchor="middle" x="771.3169" y="-3982.6068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;assert(da,&quot;db lp.vm_get:data error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-3967.2067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;v = _persist_raw_to_val(lp, da[2], da[1])</text>
<text text-anchor="middle" x="771.3169" y="-3951.8067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;rawset(ca,k,v)</text>
<text text-anchor="middle" x="771.3169" y="-3936.4067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;else</text>
<text text-anchor="middle" x="771.3169" y="-3921.0066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;lp.vm_get:reset() &#45;&#45; releases locks afer step</text>
<text text-anchor="middle" x="771.3169" y="-3905.6066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;v = nil</text>
<text text-anchor="middle" x="771.3169" y="-3890.2066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="771.3169" y="-3874.8066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return v</text>
<text text-anchor="middle" x="771.3169" y="-3859.4065" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-3828.0065" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_exists = function (lp,TID)</text>
<text text-anchor="middle" x="771.3169" y="-3812.6065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_vm_setup(lp,lp.vm_get,TID,&quot;_&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-3797.2064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_get:bind(3,&quot;_&quot;)==sqlite3.OK,&quot;db _ bind error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-3781.8064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local rc = lp.vm_get:step()</text>
<text text-anchor="middle" x="771.3169" y="-3766.4064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_get:reset() &#45;&#45; releases locks afer step</text>
<text text-anchor="middle" x="771.3169" y="-3751.0063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return(rc==sqlite3.ROW)</text>
<text text-anchor="middle" x="771.3169" y="-3735.6063" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-3704.2063" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_newindex = function (t,k,v)</text>
<text text-anchor="middle" x="771.3169" y="-3688.8062" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(k,&quot;key of nil not permitted&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-3673.4062" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local ca = assert(getmetatable(t).__lpt_cache,&quot;there is no __lpt_cache for this persistent table&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-3658.0062" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; local pv = rawget(ca,k)</text>
<text text-anchor="middle" x="771.3169" y="-3642.6061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; if(pv~=nil) then end &#45;&#45; maybe remove tables &#45;&#45; but need gc since there may be circular refs!</text>
<text text-anchor="middle" x="771.3169" y="-3627.2061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local lp = assert(getmetatable(t).__lpt_db,&quot;there is no __lpt_db for this persistent table&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-3611.8061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local TID = assert(getmetatable(t).__lpt_TID,&quot;there is no __lpt_TID for this persistent table&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-3596.4061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local rc, vm</text>
<text text-anchor="middle" x="771.3169" y="-3581.006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(v~=nil) then</text>
<text text-anchor="middle" x="771.3169" y="-3565.606" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local val,vyp = _persist_val_vyp(lp,v) &#45;&#45; this must come before vm_setup since it might use vm</text>
<text text-anchor="middle" x="771.3169" y="-3550.206" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;vm = lp.vm_new</text>
<text text-anchor="middle" x="771.3169" y="-3534.8059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;_persist_vm_setup(lp,vm,TID,k)</text>
<text text-anchor="middle" x="771.3169" y="-3519.4059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if vyp==&quot;e&quot;</text>
<text text-anchor="middle" x="771.3169" y="-3504.0059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;then</text>
<text text-anchor="middle" x="771.3169" y="-3488.6058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;assert(lp.vm_new:bind_blob(4,val)==sqlite3.OK,&quot;db Key bind error:&quot;..val)</text>
<text text-anchor="middle" x="771.3169" y="-3473.2058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;else</text>
<text text-anchor="middle" x="771.3169" y="-3457.8058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;assert(lp.vm_new:bind(4,val)==sqlite3.OK,&quot;db Key bind error:&quot;..val)</text>
<text text-anchor="middle" x="771.3169" y="-3442.4057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="771.3169" y="-3427.0057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;assert(lp.vm_new:bind(5,vyp)==sqlite3.OK,&quot;db Kyp bind error:&quot;..vyp)</text>
<text text-anchor="middle" x="771.3169" y="-3411.6057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;rc = lp.vm_new:step()</text>
<text text-anchor="middle" x="771.3169" y="-3396.2056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;else</text>
<text text-anchor="middle" x="771.3169" y="-3380.8056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;vm = lp.vm_del</text>
<text text-anchor="middle" x="771.3169" y="-3365.4056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;_persist_vm_setup(lp,vm,TID,k)</text>
<text text-anchor="middle" x="771.3169" y="-3350.0056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;rc = lp.vm_del:step()</text>
<text text-anchor="middle" x="771.3169" y="-3334.6055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="771.3169" y="-3319.2055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;vm:reset() &#45;&#45; releases locks afer step</text>
<text text-anchor="middle" x="771.3169" y="-3303.8055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(rc==sqlite3.DONE) then</text>
<text text-anchor="middle" x="771.3169" y="-3288.4054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;rawset(ca,k,v)</text>
<text text-anchor="middle" x="771.3169" y="-3273.0054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;else</text>
<text text-anchor="middle" x="771.3169" y="-3257.6054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;error(&quot;bad result code: &quot;..rc..&quot;&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-3242.2053" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="771.3169" y="-3226.8053" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-3195.4053" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_pairs = function (t)</text>
<text text-anchor="middle" x="771.3169" y="-3180.0052" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(type(t)==&#39;table&#39;,&quot;arg is not a table&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-3164.6052" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local ca = assert(getmetatable(t).__lpt_cache,&quot;arg is not a persistent table&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-3149.2052" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return pairs(ca)</text>
<text text-anchor="middle" x="771.3169" y="-3133.8051" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-3102.4051" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_check = function (lp)</text>
<text text-anchor="middle" x="771.3169" y="-3087.0051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.LPT,&quot;the db must be opened first with persist.open&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-3071.6051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.db,&quot;the db must be opened first with persist.open&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-3056.205" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-3024.805" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.close = function (lp)</text>
<text text-anchor="middle" x="771.3169" y="-3009.405" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_check(lp)</text>
<text text-anchor="middle" x="771.3169" y="-2994.0049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.db:close()</text>
<text text-anchor="middle" x="771.3169" y="-2978.6049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.db=nil;</text>
<text text-anchor="middle" x="771.3169" y="-2963.2049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; nice for GC?</text>
<text text-anchor="middle" x="771.3169" y="-2947.8048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_new = nil</text>
<text text-anchor="middle" x="771.3169" y="-2932.4048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_del = nil</text>
<text text-anchor="middle" x="771.3169" y="-2917.0048" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_get = nil</text>
<text text-anchor="middle" x="771.3169" y="-2901.6047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_set = nil</text>
<text text-anchor="middle" x="771.3169" y="-2886.2047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_delt = nil</text>
<text text-anchor="middle" x="771.3169" y="-2870.8047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.map = nil</text>
<text text-anchor="middle" x="771.3169" y="-2855.4047" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-2824.0046" font-family="Inconsolata" font-size="14.00" fill="#000000">local _persist_new_table = function (lp,TID)</text>
<text text-anchor="middle" x="771.3169" y="-2808.6046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local t = {}</text>
<text text-anchor="middle" x="771.3169" y="-2793.2046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;setmetatable(t,{[&quot;__lpt_db&quot;] = lp,</text>
<text text-anchor="middle" x="771.3169" y="-2777.8045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[&quot;__lpt_TID&quot;] = TID,</text>
<text text-anchor="middle" x="771.3169" y="-2762.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[&quot;__lpt_cache&quot;] = {},</text>
<text text-anchor="middle" x="771.3169" y="-2747.0045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[&quot;__index&quot;] = _persist_index,</text>
<text text-anchor="middle" x="771.3169" y="-2731.6044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[&quot;__newindex&quot;] = _persist_newindex,</text>
<text text-anchor="middle" x="771.3169" y="-2716.2044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[&quot;__unm&quot;] = _persist_pairs})</text>
<text text-anchor="middle" x="771.3169" y="-2700.8044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return t</text>
<text text-anchor="middle" x="771.3169" y="-2685.4043" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-2654.0043" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.exists = _persist_exists</text>
<text text-anchor="middle" x="771.3169" y="-2622.6043" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.new_table = function (lp,TID)</text>
<text text-anchor="middle" x="771.3169" y="-2607.2042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_check(lp)</text>
<text text-anchor="middle" x="771.3169" y="-2591.8042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.map[TID]==nil,&quot;the table is already created and open&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-2576.4042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(not lp:exists(TID),&quot;a persistent table with TID &quot;..TID..&quot; already exists&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-2561.0042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local t = _persist_new_table(lp,TID)</text>
<text text-anchor="middle" x="771.3169" y="-2545.6041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_new:reset()==sqlite3.OK,&quot;reset error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-2530.2041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_new:bind(1,TID)==sqlite3.OK,&quot;bind 1 error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-2514.8041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_new:bind(2,&quot;_&quot;)==sqlite3.OK,&quot;bind 2 error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-2499.404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_new:bind(3,&quot;_&quot;)==sqlite3.OK,&quot;bind 3 error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-2484.004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_new:bind(4,&quot;_&quot;)==sqlite3.OK,&quot;bind 4 error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-2468.604" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_new:bind(5,&quot;_&quot;)==sqlite3.OK,&quot;bind 5 error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-2453.2039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local rc = lp.vm_new:step()</text>
<text text-anchor="middle" x="771.3169" y="-2437.8039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_new:reset() &#45;&#45; release locks</text>
<text text-anchor="middle" x="771.3169" y="-2422.4039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(rc==sqlite3.DONE) then</text>
<text text-anchor="middle" x="771.3169" y="-2407.0038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;lp.map[TID] = t</text>
<text text-anchor="middle" x="771.3169" y="-2391.6038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;else</text>
<text text-anchor="middle" x="771.3169" y="-2376.2038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;error(&quot;step error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-2360.8037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="771.3169" y="-2345.4037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return t</text>
<text text-anchor="middle" x="771.3169" y="-2330.0037" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-2298.6037" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.cache = function (lp,TID)</text>
<text text-anchor="middle" x="771.3169" y="-2283.2036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_check(lp)</text>
<text text-anchor="middle" x="771.3169" y="-2267.8036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local t = lp.map[TID]</text>
<text text-anchor="middle" x="771.3169" y="-2252.4036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(t~=nil,&quot;the table does not exist&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-2237.0035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local ca = assert(getmetatable(t).__lpt_cache,&quot;there is no __lpt_cache for this persistent table&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-2221.6035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; whack the vm</text>
<text text-anchor="middle" x="771.3169" y="-2206.2035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;fn,vm,rc = lp.db:urows(&quot;SELECT Key,Kyp,Val,Vyp FROM luat where TID=?&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-2190.8034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(vm,&quot;lp.db:rows failed&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-2175.4034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;vm:bind(1,TID)</text>
<text text-anchor="middle" x="771.3169" y="-2160.0034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;for Key,Kyp,Val,Vyp in fn,vm,rc do</text>
<text text-anchor="middle" x="771.3169" y="-2144.6033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if( Key ~= &quot;_&quot; ) then</text>
<text text-anchor="middle" x="771.3169" y="-2129.2033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;rawset(ca, _persist_raw_to_val(lp,Kyp,Key), _persist_raw_to_val(lp,Vyp,Val))</text>
<text text-anchor="middle" x="771.3169" y="-2113.8033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="771.3169" y="-2098.4032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="771.3169" y="-2083.0032" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-2051.6032" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.get_table = function (lp,TID)</text>
<text text-anchor="middle" x="771.3169" y="-2036.2032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_check(lp)</text>
<text text-anchor="middle" x="771.3169" y="-2020.8031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local t = lp.map[TID]</text>
<text text-anchor="middle" x="771.3169" y="-2005.4031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(t~=nil) then return t end</text>
<text text-anchor="middle" x="771.3169" y="-1990.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp:exists(TID),&quot;no persistent table has the TID &quot;..TID)</text>
<text text-anchor="middle" x="771.3169" y="-1974.603" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;t = _persist_new_table(lp,TID)</text>
<text text-anchor="middle" x="771.3169" y="-1959.203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.map[TID] = t</text>
<text text-anchor="middle" x="771.3169" y="-1943.803" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; this needn&#39;t cache the whole table! we can make it lazy</text>
<text text-anchor="middle" x="771.3169" y="-1928.4029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; persist.cache(lp,TID)</text>
<text text-anchor="middle" x="771.3169" y="-1913.0029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return t</text>
<text text-anchor="middle" x="771.3169" y="-1897.6029" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-1866.2028" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.set_table = function (lp,TID,s)</text>
<text text-anchor="middle" x="771.3169" y="-1850.8028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_check(lp)</text>
<text text-anchor="middle" x="771.3169" y="-1835.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local t = lp.map[TID]</text>
<text text-anchor="middle" x="771.3169" y="-1820.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(t~=nil,&quot;the table does not exist&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-1804.6027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;for k,v in pairs(s) do</text>
<text text-anchor="middle" x="771.3169" y="-1789.2027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;t[k]=v</text>
<text text-anchor="middle" x="771.3169" y="-1773.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="771.3169" y="-1758.4026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return t</text>
<text text-anchor="middle" x="771.3169" y="-1743.0026" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-1711.6026" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.delete_table = function (lp,TID)</text>
<text text-anchor="middle" x="771.3169" y="-1696.2025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;_persist_check(lp)</text>
<text text-anchor="middle" x="771.3169" y="-1680.8025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local t = lp.map[TID]</text>
<text text-anchor="middle" x="771.3169" y="-1665.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if(t~=nil) then lp.map[TID] = nil end</text>
<text text-anchor="middle" x="771.3169" y="-1650.0024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45;assert(lp:exists(TID),&quot;no persistent table has the TID &quot;..TID)</text>
<text text-anchor="middle" x="771.3169" y="-1634.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_delt:reset()==sqlite3.OK,&quot;db reset error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-1619.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;assert(lp.vm_delt:bind(1,TID)==sqlite3.OK,&quot;db TID bind error&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-1603.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local rc = lp.vm_delt:step()</text>
<text text-anchor="middle" x="771.3169" y="-1588.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_delt:reset() &#45;&#45; releases locks afer step</text>
<text text-anchor="middle" x="771.3169" y="-1573.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return(rc)</text>
<text text-anchor="middle" x="771.3169" y="-1557.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; to do: what is rc supposed to be? 101</text>
<text text-anchor="middle" x="771.3169" y="-1542.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45;return t</text>
<text text-anchor="middle" x="771.3169" y="-1526.8022" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-1495.4022" font-family="Inconsolata" font-size="14.00" fill="#000000">persist.open = function (dbname)</text>
<text text-anchor="middle" x="771.3169" y="-1480.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local lp = {}</text>
<text text-anchor="middle" x="771.3169" y="-1464.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.LPT = true &#45;&#45; a tag</text>
<text text-anchor="middle" x="771.3169" y="-1449.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.seq = 0 &#45;&#45; tid generator &#45;&#45; would be nice to select max (TID) where TID like &#39;tid%&#39;</text>
<text text-anchor="middle" x="771.3169" y="-1433.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.db = assert(sqlite3.open(dbname))</text>
<text text-anchor="middle" x="771.3169" y="-1418.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; initialize the db; ignore error from CREATE as it may already have been done</text>
<text text-anchor="middle" x="771.3169" y="-1403.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local err,str = lp.db:exec(&quot;create table luat (TID,Key,Kyp,Val,Vyp, primary key (TID,Key,Kyp) on conflict replace)&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-1387.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if (err==26) then</text>
<text text-anchor="middle" x="771.3169" y="-1372.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;lp.db:close() &#45;&#45; bad database format</text>
<text text-anchor="middle" x="771.3169" y="-1356.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return nil,str</text>
<text text-anchor="middle" x="771.3169" y="-1341.4018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="771.3169" y="-1326.0018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_new = assert(lp.db:compile(&quot;insert into luat values (?,?,?,?,?)&quot;))</text>
<text text-anchor="middle" x="771.3169" y="-1310.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_del = assert(lp.db:compile(&quot;delete from luat where TID=? and Key=? and Kyp=?&quot;))</text>
<text text-anchor="middle" x="771.3169" y="-1295.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_get = assert(lp.db:compile(&quot;select Val,Vyp from luat where TID=? and Key=? and Kyp=?&quot;))</text>
<text text-anchor="middle" x="771.3169" y="-1279.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45;lp.vm_set = assert(lp.db:compile(&quot;update luat set Val=?,Vyp=? where TID=? and Key=? and Kyp=?&quot;))</text>
<text text-anchor="middle" x="771.3169" y="-1264.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.vm_delt = assert(lp.db:compile(&quot;delete from luat where TID=?&quot;))</text>
<text text-anchor="middle" x="771.3169" y="-1249.0017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; convenience oo functions</text>
<text text-anchor="middle" x="771.3169" y="-1233.6016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.new_table = persist.new_table</text>
<text text-anchor="middle" x="771.3169" y="-1218.2016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.get_table = persist.get_table</text>
<text text-anchor="middle" x="771.3169" y="-1202.8016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.set_table = persist.set_table</text>
<text text-anchor="middle" x="771.3169" y="-1187.4015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.cache = persist.cache</text>
<text text-anchor="middle" x="771.3169" y="-1172.0015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.exists = persist.exists</text>
<text text-anchor="middle" x="771.3169" y="-1156.6015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.delete_table = persist.delete_table</text>
<text text-anchor="middle" x="771.3169" y="-1141.2014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.close = persist.close</text>
<text text-anchor="middle" x="771.3169" y="-1125.8014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; initialize the in&#45;memory map</text>
<text text-anchor="middle" x="771.3169" y="-1110.4014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;lp.map = {}</text>
<text text-anchor="middle" x="771.3169" y="-1095.0013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;setmetatable(lp.map,{[&quot;__mode&quot;]=&quot;v&quot;}) &#45;&#45; weak on values</text>
<text text-anchor="middle" x="771.3169" y="-1079.6013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return lp</text>
<text text-anchor="middle" x="771.3169" y="-1064.2013" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-1048.8012" font-family="Inconsolata" font-size="14.00" fill="#000000">Examples:</text>
<text text-anchor="middle" x="771.3169" y="-1017.4012" font-family="Inconsolata" font-size="14.00" fill="#000000">require &quot;luapersist3&quot;</text>
<text text-anchor="middle" x="771.3169" y="-986.0012" font-family="Inconsolata" font-size="14.00" fill="#000000">lp=assert(persist.open&quot;ptest.db&quot;) &#45;&#45; or &#45;&#45;</text>
<text text-anchor="middle" x="771.3169" y="-970.6012" font-family="Inconsolata" font-size="14.00" fill="#000000">lp=assert(persist.open&quot;:memory:&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-939.2011" font-family="Inconsolata" font-size="14.00" fill="#000000">t=lp:new_table(&quot;foo&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-907.8011" font-family="Inconsolata" font-size="14.00" fill="#000000">assert(t==lp.map.foo)</text>
<text text-anchor="middle" x="771.3169" y="-876.4011" font-family="Inconsolata" font-size="14.00" fill="#000000">t[&quot;baz&quot;] = 7</text>
<text text-anchor="middle" x="771.3169" y="-845.001" font-family="Inconsolata" font-size="14.00" fill="#000000">for TID,Key,Kyp,Val,Vyp in lp.db:urows(&quot;SELECT * FROM luat&quot;) do</text>
<text text-anchor="middle" x="771.3169" y="-829.601" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;print(TID, Key, Kyp, Val, Vyp) end</text>
<text text-anchor="middle" x="771.3169" y="-798.201" font-family="Inconsolata" font-size="14.00" fill="#000000">t[&quot;baz&quot;] = 9</text>
<text text-anchor="middle" x="771.3169" y="-782.8009" font-family="Inconsolata" font-size="14.00" fill="#000000">t[&quot;bar&quot;] = 9</text>
<text text-anchor="middle" x="771.3169" y="-767.4009" font-family="Inconsolata" font-size="14.00" fill="#000000">t[&quot;baz&quot;] = 3</text>
<text text-anchor="middle" x="771.3169" y="-736.0009" font-family="Inconsolata" font-size="14.00" fill="#000000">t.tt = {[&quot;a&quot;]=1,[&quot;b&quot;]=2}</text>
<text text-anchor="middle" x="771.3169" y="-704.6008" font-family="Inconsolata" font-size="14.00" fill="#000000">tt[{1,2,3}]=&quot;t123&quot; &#45;&#45; error</text>
<text text-anchor="middle" x="771.3169" y="-673.2008" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; close and open</text>
<text text-anchor="middle" x="771.3169" y="-641.8008" font-family="Inconsolata" font-size="14.00" fill="#000000">t=lp:get_table(&quot;foo&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-610.4007" font-family="Inconsolata" font-size="14.00" fill="#000000">for Key,Kyp,Val,Vyp</text>
<text text-anchor="middle" x="771.3169" y="-595.0007" font-family="Inconsolata" font-size="14.00" fill="#000000"> in lp.db:urows(&quot;SELECT Key,Kyp,Val,Vyp FROM luat where TID=&#39;foo&#39;&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-579.6007" font-family="Inconsolata" font-size="14.00" fill="#000000"> do print(Key, Kyp, Val, Vyp) end</text>
<text text-anchor="middle" x="771.3169" y="-548.2007" font-family="Inconsolata" font-size="14.00" fill="#000000">lp:cache&quot;foo&quot;</text>
<text text-anchor="middle" x="771.3169" y="-516.8006" font-family="Inconsolata" font-size="14.00" fill="#000000">ca = assert(getmetatable(t).__lpt_cache,&quot;there is no __lpt_cache for this persistent table&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-485.4006" font-family="Inconsolata" font-size="14.00" fill="#000000">for k,v in pairs(ca) do print(k,v) end</text>
<text text-anchor="middle" x="771.3169" y="-454.0006" font-family="Inconsolata" font-size="14.00" fill="#000000">=t.tt.a</text>
<text text-anchor="middle" x="771.3169" y="-422.6005" font-family="Inconsolata" font-size="14.00" fill="#000000">t[&quot;123\000567&quot;]=&quot;abc\000efg&quot;</text>
<text text-anchor="middle" x="771.3169" y="-391.2005" font-family="Inconsolata" font-size="14.00" fill="#000000">for k,v in pairs(ca)</text>
<text text-anchor="middle" x="771.3169" y="-375.8005" font-family="Inconsolata" font-size="14.00" fill="#000000"> do local x = 0</text>
<text text-anchor="middle" x="771.3169" y="-360.4004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if(type(v)==&#39;string&#39;) then x = string.len (v) end</text>
<text text-anchor="middle" x="771.3169" y="-345.0004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;print(k,v,string.len(k),x)</text>
<text text-anchor="middle" x="771.3169" y="-329.6004" font-family="Inconsolata" font-size="14.00" fill="#000000"> end</text>
<text text-anchor="middle" x="771.3169" y="-298.2003" font-family="Inconsolata" font-size="14.00" fill="#000000">for Key,Kyp,Val,Vyp</text>
<text text-anchor="middle" x="771.3169" y="-282.8003" font-family="Inconsolata" font-size="14.00" fill="#000000"> in lp.db:urows(&quot;SELECT Key,Kyp,Val,Vyp FROM luat where TID=&#39;tid1&#39;&quot;)</text>
<text text-anchor="middle" x="771.3169" y="-267.4003" font-family="Inconsolata" font-size="14.00" fill="#000000"> do print(Key, Kyp, Val, Vyp) end</text>
<text text-anchor="middle" x="771.3169" y="-236.0002" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; debugging</text>
<text text-anchor="middle" x="771.3169" y="-204.6002" font-family="Inconsolata" font-size="14.00" fill="#000000">for r in lp.db:nrows(&quot;SELECT * FROM SQLITE_MASTER&quot;) do</text>
<text text-anchor="middle" x="771.3169" y="-189.2002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;for k,v in pairs(r) do print(k,v) end</text>
<text text-anchor="middle" x="771.3169" y="-173.8002" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="771.3169" y="-142.4001" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; maintanance &#45;&#45; LOSES ALL DATA!</text>
<text text-anchor="middle" x="771.3169" y="-111.0001" font-family="Inconsolata" font-size="14.00" fill="#000000">for r in lp.db:nrows(&quot;DROP TABLE luat&quot;) do</text>
<text text-anchor="middle" x="771.3169" y="-95.6001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;for k,v in pairs(r) do print(k,v) end</text>
<text text-anchor="middle" x="771.3169" y="-80.2" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
</g>
<!-- codeblock_4&#45;&gt;leaf_8 -->
<g id="edge8" class="edge">
<title>codeblock_4&#45;&gt;leaf_8</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M603.2883,-6292.926C603.6523,-6286.149 604.1153,-6277.5278 604.6719,-6267.165"/>
<polygon fill="#000000" stroke="#000000" points="608.1677,-6267.3348 605.2092,-6257.1614 601.1778,-6266.9593 608.1677,-6267.3348"/>
</g>
<!-- leaf_7 -->
<g id="node8" class="node">
<title>leaf_7</title>
<polygon fill="none" stroke="#c0c0c0" points="332.3169,-36 278.3169,-36 278.3169,0 332.3169,0 332.3169,-36"/>
</g>
<!-- raw_6&#45;&gt;leaf_7 -->
<g id="edge7" class="edge">
<title>raw_6&#45;&gt;leaf_7</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M305.3169,-3146.4206C305.3169,-2906.0355 305.3169,-345.2471 305.3169,-46.4074"/>
<polygon fill="#000000" stroke="#000000" points="308.817,-46.3733 305.3169,-36.3733 301.817,-46.3734 308.817,-46.3733"/>
</g>
</g>
</svg>
