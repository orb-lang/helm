<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: lpegNode Pages: 1 -->
<svg width="3024pt" height="5572pt"
 viewBox="0.00 0.00 3023.50 5571.81" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 5567.8096)">
<title>lpegNode</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-5567.8096 3019.5,-5567.8096 3019.5,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="900.5" cy="-5545.8096" rx="46.9581" ry="18"/>
<text text-anchor="middle" x="900.5" y="-5541.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">doc &#45; 367</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="900.5" cy="-5473.8096" rx="60.9826" ry="18"/>
<text text-anchor="middle" x="900.5" y="-5469.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1&#45;12</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M900.5,-5527.6409C900.5,-5519.9405 900.5,-5510.7839 900.5,-5502.2262"/>
<polygon fill="#000000" stroke="#000000" points="904.0001,-5502.2228 900.5,-5492.2228 897.0001,-5502.2229 904.0001,-5502.2228"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="337.5" cy="-5401.8096" rx="49.8395" ry="18"/>
<text text-anchor="middle" x="337.5" y="-5397.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">1 : Reflect</text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M842.0132,-5468.9031C751.986,-5460.9616 574.1757,-5443.7324 424.5,-5419.8096 413.1912,-5418.0021 401.1237,-5415.7289 389.6889,-5413.4121"/>
<polygon fill="#000000" stroke="#000000" points="390.3396,-5409.9727 379.8381,-5411.3756 388.9224,-5416.8278 390.3396,-5409.9727"/>
</g>
<!-- prose_3 -->
<g id="node4" class="node">
<title>prose_3</title>
<ellipse fill="none" stroke="#000000" cx="465.5" cy="-5401.8096" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="465.5" y="-5397.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;prose_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M847.1605,-5464.981C759.2261,-5450.4263 585.7035,-5421.7053 506.5721,-5408.6077"/>
<polygon fill="#000000" stroke="#000000" points="506.938,-5405.1207 496.5007,-5406.9407 505.7949,-5412.0268 506.938,-5405.1207"/>
</g>
<!-- prose_4 -->
<g id="node5" class="node">
<title>prose_4</title>
<ellipse fill="none" stroke="#000000" cx="928.5" cy="-5401.8096" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="928.5" y="-5397.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;prose_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M907.5656,-5455.6409C910.6731,-5447.6502 914.3904,-5438.0914 917.8245,-5429.261"/>
<polygon fill="#000000" stroke="#000000" points="921.1712,-5430.3116 921.5337,-5419.723 914.6471,-5427.7745 921.1712,-5430.3116"/>
</g>
<!-- section_5 -->
<g id="node6" class="node">
<title>section_5</title>
<ellipse fill="none" stroke="#000000" cx="1824.5" cy="-5401.8096" rx="70.655" ry="18"/>
<text text-anchor="middle" x="1824.5" y="-5397.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 13&#45;367</text>
</g>
<!-- section_1&#45;&gt;section_5 -->
<g id="edge5" class="edge">
<title>section_1&#45;&gt;section_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M959.3532,-5469.2236C1119.9117,-5456.7126 1565.5608,-5421.9867 1746.5712,-5407.882"/>
<polygon fill="#000000" stroke="#000000" points="1747.1119,-5411.3505 1756.8097,-5407.0841 1746.568,-5404.3717 1747.1119,-5411.3505"/>
</g>
<!-- leaf_6 -->
<g id="node7" class="node">
<title>leaf_6</title>
<polygon fill="none" stroke="#c0c0c0" points="294,-5347.8096 215,-5347.8096 215,-5311.8096 294,-5311.8096 294,-5347.8096"/>
<text text-anchor="middle" x="254.5" y="-5326.3096" font-family="Inconsolata" font-size="14.00" fill="#000000">* Reflect</text>
</g>
<!-- header_2&#45;&gt;leaf_6 -->
<g id="edge6" class="edge">
<title>header_2&#45;&gt;leaf_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M318.2495,-5385.1104C307.8217,-5376.0646 294.733,-5364.7105 283.1329,-5354.6477"/>
<polygon fill="#000000" stroke="#000000" points="285.2382,-5351.8407 275.3908,-5347.9317 280.6512,-5357.1284 285.2382,-5351.8407"/>
</g>
<!-- raw_7 -->
<g id="node8" class="node">
<title>raw_7</title>
<ellipse fill="none" stroke="#000000" cx="339.5" cy="-5329.8096" rx="27" ry="18"/>
<text text-anchor="middle" x="339.5" y="-5325.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_3&#45;&gt;raw_7 -->
<g id="edge7" class="edge">
<title>prose_3&#45;&gt;raw_7</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M442.6824,-5388.7709C421.9889,-5376.9461 391.3684,-5359.4487 368.8574,-5346.5852"/>
<polygon fill="#000000" stroke="#000000" points="370.4808,-5343.4818 360.0619,-5341.5592 367.0078,-5349.5595 370.4808,-5343.4818"/>
</g>
<!-- link_8 -->
<g id="node9" class="node">
<title>link_8</title>
<ellipse fill="none" stroke="#000000" cx="411.5" cy="-5329.8096" rx="27" ry="18"/>
<text text-anchor="middle" x="411.5" y="-5325.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">link</text>
</g>
<!-- prose_3&#45;&gt;link_8 -->
<g id="edge8" class="edge">
<title>prose_3&#45;&gt;link_8</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M452.9756,-5385.1104C446.0627,-5375.8932 437.3525,-5364.2795 429.7008,-5354.0773"/>
<polygon fill="#000000" stroke="#000000" points="432.3851,-5351.823 423.585,-5345.923 426.7851,-5356.023 432.3851,-5351.823"/>
</g>
<!-- raw_9 -->
<g id="node10" class="node">
<title>raw_9</title>
<ellipse fill="none" stroke="#000000" cx="576.5" cy="-5329.8096" rx="27" ry="18"/>
<text text-anchor="middle" x="576.5" y="-5325.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_3&#45;&gt;raw_9 -->
<g id="edge9" class="edge">
<title>prose_3&#45;&gt;raw_9</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M486.6395,-5388.0975C504.1247,-5376.7557 529.1114,-5360.5481 548.3001,-5348.1014"/>
<polygon fill="#000000" stroke="#000000" points="550.4429,-5350.8833 556.9279,-5342.505 546.6336,-5345.0106 550.4429,-5350.8833"/>
</g>
<!-- raw_16 -->
<g id="node17" class="node">
<title>raw_16</title>
<ellipse fill="none" stroke="#000000" cx="1037.5" cy="-5329.8096" rx="27" ry="18"/>
<text text-anchor="middle" x="1037.5" y="-5325.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_4&#45;&gt;raw_16 -->
<g id="edge16" class="edge">
<title>prose_4&#45;&gt;raw_16</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M949.5163,-5387.9273C966.6061,-5376.6386 990.8676,-5360.6126 1009.5868,-5348.2477"/>
<polygon fill="#000000" stroke="#000000" points="1011.5981,-5351.1138 1018.013,-5342.6817 1007.7399,-5345.273 1011.5981,-5351.1138"/>
</g>
<!-- header_18 -->
<g id="node19" class="node">
<title>header_18</title>
<ellipse fill="none" stroke="#000000" cx="1615.5" cy="-5329.8096" rx="76.4002" ry="18"/>
<text text-anchor="middle" x="1615.5" y="-5325.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">4 : License (MIT)</text>
</g>
<!-- section_5&#45;&gt;header_18 -->
<g id="edge18" class="edge">
<title>section_5&#45;&gt;header_18</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1782.4571,-5387.3259C1749.6608,-5376.0276 1703.9005,-5360.2633 1668.5795,-5348.0954"/>
<polygon fill="#000000" stroke="#000000" points="1669.5082,-5344.7135 1658.9135,-5344.7654 1667.2282,-5351.3317 1669.5082,-5344.7135"/>
</g>
<!-- prose_19 -->
<g id="node20" class="node">
<title>prose_19</title>
<ellipse fill="none" stroke="#000000" cx="1742.5" cy="-5329.8096" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1742.5" y="-5325.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_5&#45;&gt;prose_19 -->
<g id="edge19" class="edge">
<title>section_5&#45;&gt;prose_19</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1804.6501,-5384.3804C1793.5588,-5374.6417 1779.6239,-5362.4062 1767.7613,-5351.9902"/>
<polygon fill="#000000" stroke="#000000" points="1769.764,-5349.091 1759.9403,-5345.123 1765.1454,-5354.3511 1769.764,-5349.091"/>
</g>
<!-- prose_20 -->
<g id="node21" class="node">
<title>prose_20</title>
<ellipse fill="none" stroke="#000000" cx="1824.5" cy="-5329.8096" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1824.5" y="-5325.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_5&#45;&gt;prose_20 -->
<g id="edge20" class="edge">
<title>section_5&#45;&gt;prose_20</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1824.5,-5383.6409C1824.5,-5375.9405 1824.5,-5366.7839 1824.5,-5358.2262"/>
<polygon fill="#000000" stroke="#000000" points="1828.0001,-5358.2228 1824.5,-5348.2228 1821.0001,-5358.2229 1828.0001,-5358.2228"/>
</g>
<!-- prose_21 -->
<g id="node22" class="node">
<title>prose_21</title>
<ellipse fill="none" stroke="#000000" cx="1906.5" cy="-5329.8096" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1906.5" y="-5325.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_5&#45;&gt;prose_21 -->
<g id="edge21" class="edge">
<title>section_5&#45;&gt;prose_21</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1844.3499,-5384.3804C1855.4412,-5374.6417 1869.3761,-5362.4062 1881.2387,-5351.9902"/>
<polygon fill="#000000" stroke="#000000" points="1883.8546,-5354.3511 1889.0597,-5345.123 1879.236,-5349.091 1883.8546,-5354.3511"/>
</g>
<!-- prose_22 -->
<g id="node23" class="node">
<title>prose_22</title>
<ellipse fill="none" stroke="#000000" cx="1988.5" cy="-5329.8096" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="1988.5" y="-5325.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_5&#45;&gt;prose_22 -->
<g id="edge22" class="edge">
<title>section_5&#45;&gt;prose_22</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1860.0856,-5386.1867C1887.8949,-5373.9777 1926.3238,-5357.1064 1953.8826,-5345.0075"/>
<polygon fill="#000000" stroke="#000000" points="1955.3925,-5348.1671 1963.1419,-5340.9424 1952.5785,-5341.7576 1955.3925,-5348.1671"/>
</g>
<!-- codeblock_23 -->
<g id="node24" class="node">
<title>codeblock_23</title>
<ellipse fill="none" stroke="#000000" cx="2322.5" cy="-5329.8096" rx="82.2579" ry="18"/>
<text text-anchor="middle" x="2322.5" y="-5325.6096" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 36&#45;367</text>
</g>
<!-- section_5&#45;&gt;codeblock_23 -->
<g id="edge23" class="edge">
<title>section_5&#45;&gt;codeblock_23</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1886.0641,-5392.9088C1976.2606,-5379.8683 2144.3404,-5355.5676 2243.5246,-5341.2277"/>
<polygon fill="#000000" stroke="#000000" points="2244.0976,-5344.6813 2253.4939,-5339.7864 2243.0959,-5337.7534 2244.0976,-5344.6813"/>
</g>
<!-- leaf_10 -->
<g id="node11" class="node">
<title>leaf_10</title>
<polygon fill="none" stroke="#c0c0c0" points="219,-2757.7061 0,-2757.7061 0,-2685.9037 219,-2685.9037 219,-2757.7061"/>
<text text-anchor="middle" x="109.5" y="-2694.3049" font-family="Inconsolata" font-size="14.00" fill="#000000">This lovely library has been </text>
</g>
<!-- raw_7&#45;&gt;leaf_10 -->
<g id="edge10" class="edge">
<title>raw_7&#45;&gt;leaf_10</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M317.57,-5319.1409C285.2212,-5303.4037 228.5,-5275.8096 228.5,-5275.8096 -56.3234,-4843.2397 79.2364,-3077.0893 105.4438,-2768.0564"/>
<polygon fill="#000000" stroke="#000000" points="108.966,-2767.9438 106.3291,-2757.6824 101.9914,-2767.3486 108.966,-2767.9438"/>
</g>
<!-- anchortext_11 -->
<g id="node12" class="node">
<title>anchortext_11</title>
<ellipse fill="none" stroke="#000000" cx="288.5" cy="-2721.8049" rx="51.3018" ry="18"/>
<text text-anchor="middle" x="288.5" y="-2717.6049" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">anchortext</text>
</g>
<!-- link_8&#45;&gt;anchortext_11 -->
<g id="edge11" class="edge">
<title>link_8&#45;&gt;anchortext_11</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M390.3619,-5318.2172C375.6903,-5308.8854 357.2653,-5294.2923 348.5,-5275.8096 234.8553,-5036.1748 281.196,-3014.7447 287.7721,-2750.2978"/>
<polygon fill="#000000" stroke="#000000" points="291.2784,-2750.0851 288.0302,-2740.0005 284.2806,-2749.9096 291.2784,-2750.0851"/>
</g>
<!-- url_12 -->
<g id="node13" class="node">
<title>url_12</title>
<ellipse fill="none" stroke="#000000" cx="384.5" cy="-2721.8049" rx="27" ry="18"/>
<text text-anchor="middle" x="384.5" y="-2717.6049" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">url</text>
</g>
<!-- link_8&#45;&gt;url_12 -->
<g id="edge12" class="edge">
<title>link_8&#45;&gt;url_12</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M411.3132,-5311.7629C409.0809,-5096.1421 387.5475,-3016.1736 384.7901,-2749.8272"/>
<polygon fill="#000000" stroke="#000000" points="388.2898,-2749.7698 384.6864,-2739.8066 381.2902,-2749.8423 388.2898,-2749.7698"/>
</g>
<!-- leaf_15 -->
<g id="node16" class="node">
<title>leaf_15</title>
<polygon fill="none" stroke="#c0c0c0" points="963.5,-2749.1053 429.5,-2749.1053 429.5,-2694.5045 963.5,-2694.5045 963.5,-2749.1053"/>
<text text-anchor="middle" x="696.5" y="-2718.0049" font-family="Inconsolata" font-size="14.00" fill="#000000">so we can find names for struct fields and otherwise iterate over compound</text>
<text text-anchor="middle" x="696.5" y="-2702.6049" font-family="Inconsolata" font-size="14.00" fill="#000000">data in C.</text>
</g>
<!-- raw_9&#45;&gt;leaf_15 -->
<g id="edge15" class="edge">
<title>raw_9&#45;&gt;leaf_15</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M577.3304,-5311.7629C587.1433,-5098.4949 680.877,-3061.3447 694.7799,-2759.1893"/>
<polygon fill="#000000" stroke="#000000" points="698.2771,-2759.3288 695.2405,-2749.1785 691.2844,-2759.007 698.2771,-2759.3288"/>
</g>
<!-- leaf_13 -->
<g id="node14" class="node">
<title>leaf_13</title>
<polygon fill="none" stroke="#c0c0c0" points="282,-83.9001 189,-83.9001 189,-47.9001 282,-47.9001 282,-83.9001"/>
<text text-anchor="middle" x="235.5" y="-62.4001" font-family="Inconsolata" font-size="14.00" fill="#000000">borrowed in</text>
</g>
<!-- anchortext_11&#45;&gt;leaf_13 -->
<g id="edge13" class="edge">
<title>anchortext_11&#45;&gt;leaf_13</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M288.1404,-2703.7864C283.7957,-2486.066 241.4446,-363.7906 236.0617,-94.048"/>
<polygon fill="#000000" stroke="#000000" points="239.5583,-93.8369 235.8594,-83.9088 232.5597,-93.9767 239.5583,-93.8369"/>
</g>
<!-- leaf_14 -->
<g id="node15" class="node">
<title>leaf_14</title>
<polygon fill="none" stroke="#c0c0c0" points="575,-83.9001 300,-83.9001 300,-47.9001 575,-47.9001 575,-83.9001"/>
<text text-anchor="middle" x="437.5" y="-62.4001" font-family="Inconsolata" font-size="14.00" fill="#000000">https://github.com/corsix/ffi&#45;reflect</text>
</g>
<!-- url_12&#45;&gt;leaf_14 -->
<g id="edge14" class="edge">
<title>url_12&#45;&gt;leaf_14</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M383.7104,-2703.7424C376.5664,-2535.4289 325.509,-1223.9311 420.5,-167.8002 422.7575,-142.7008 427.6581,-114.4564 431.6203,-94.0805"/>
<polygon fill="#000000" stroke="#000000" points="435.0672,-94.6918 433.5878,-84.2008 428.2021,-93.3246 435.0672,-94.6918"/>
</g>
<!-- leaf_17 -->
<g id="node18" class="node">
<title>leaf_17</title>
<polygon fill="none" stroke="#c0c0c0" points="1529.5,-2765.0052 981.5,-2765.0052 981.5,-2678.6046 1529.5,-2678.6046 1529.5,-2765.0052"/>
<text text-anchor="middle" x="1255.5" y="-2733.7049" font-family="Inconsolata" font-size="14.00" fill="#000000">This is going to take awhile: I want to be able to derive both the C type</text>
<text text-anchor="middle" x="1255.5" y="-2718.3049" font-family="Inconsolata" font-size="14.00" fill="#000000">signature and the Lua type signature of a function, and likewise for all the</text>
<text text-anchor="middle" x="1255.5" y="-2702.9049" font-family="Inconsolata" font-size="14.00" fill="#000000">other primitive and compound C types.</text>
</g>
<!-- raw_16&#45;&gt;leaf_17 -->
<g id="edge17" class="edge">
<title>raw_16&#45;&gt;leaf_17</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1039.0085,-5311.7629C1056.5449,-5101.9689 1221.6111,-3127.2285 1251.0267,-2775.3208"/>
<polygon fill="#000000" stroke="#000000" points="1254.5318,-2775.4044 1251.877,-2765.1476 1247.5561,-2774.8213 1254.5318,-2775.4044"/>
</g>
<!-- leaf_24 -->
<g id="node25" class="node">
<title>leaf_24</title>
<polygon fill="none" stroke="#c0c0c0" points="1689.5,-2739.8049 1547.5,-2739.8049 1547.5,-2703.8049 1689.5,-2703.8049 1689.5,-2739.8049"/>
<text text-anchor="middle" x="1618.5" y="-2718.3049" font-family="Inconsolata" font-size="14.00" fill="#000000">**** License (MIT)</text>
</g>
<!-- header_18&#45;&gt;leaf_24 -->
<g id="edge24" class="edge">
<title>header_18&#45;&gt;leaf_24</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1615.5208,-5311.7629C1615.7688,-5096.1421 1618.1614,-3016.1736 1618.4678,-2749.8272"/>
<polygon fill="#000000" stroke="#000000" points="1621.9677,-2749.8106 1618.4793,-2739.8066 1614.9677,-2749.8025 1621.9677,-2749.8106"/>
</g>
<!-- raw_25 -->
<g id="node26" class="node">
<title>raw_25</title>
<ellipse fill="none" stroke="#000000" cx="1739.5" cy="-2721.8049" rx="27" ry="18"/>
<text text-anchor="middle" x="1739.5" y="-2717.6049" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_19&#45;&gt;raw_25 -->
<g id="edge25" class="edge">
<title>prose_19&#45;&gt;raw_25</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1742.4792,-5311.7629C1742.2312,-5096.1421 1739.8386,-3016.1736 1739.5322,-2749.8272"/>
<polygon fill="#000000" stroke="#000000" points="1743.0323,-2749.8025 1739.5207,-2739.8066 1736.0323,-2749.8106 1743.0323,-2749.8025"/>
</g>
<!-- raw_27 -->
<g id="node28" class="node">
<title>raw_27</title>
<ellipse fill="none" stroke="#000000" cx="1818.5" cy="-2721.8049" rx="27" ry="18"/>
<text text-anchor="middle" x="1818.5" y="-2717.6049" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_20&#45;&gt;raw_27 -->
<g id="edge27" class="edge">
<title>prose_20&#45;&gt;raw_27</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1824.4585,-5311.7629C1823.9624,-5096.1421 1819.1772,-3016.1736 1818.5645,-2749.8272"/>
<polygon fill="#000000" stroke="#000000" points="1822.0645,-2749.7984 1818.5414,-2739.8066 1815.0645,-2749.8146 1822.0645,-2749.7984"/>
</g>
<!-- raw_29 -->
<g id="node30" class="node">
<title>raw_29</title>
<ellipse fill="none" stroke="#000000" cx="1911.5" cy="-2721.8049" rx="27" ry="18"/>
<text text-anchor="middle" x="1911.5" y="-2717.6049" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_21&#45;&gt;raw_29 -->
<g id="edge29" class="edge">
<title>prose_21&#45;&gt;raw_29</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1906.5346,-5311.7629C1906.948,-5096.1421 1910.9356,-3016.1736 1911.4463,-2749.8272"/>
<polygon fill="#000000" stroke="#000000" points="1914.9462,-2749.8133 1911.4655,-2739.8066 1907.9462,-2749.7998 1914.9462,-2749.8133"/>
</g>
<!-- raw_31 -->
<g id="node32" class="node">
<title>raw_31</title>
<ellipse fill="none" stroke="#000000" cx="1988.5" cy="-2721.8049" rx="27" ry="18"/>
<text text-anchor="middle" x="1988.5" y="-2717.6049" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_22&#45;&gt;raw_31 -->
<g id="edge31" class="edge">
<title>prose_22&#45;&gt;raw_31</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1988.5,-5311.7629C1988.5,-5096.1421 1988.5,-3016.1736 1988.5,-2749.8272"/>
<polygon fill="#000000" stroke="#000000" points="1992.0001,-2749.8065 1988.5,-2739.8066 1985.0001,-2749.8066 1992.0001,-2749.8065"/>
</g>
<!-- leaf_33 -->
<g id="node34" class="node">
<title>leaf_33</title>
<polygon fill="none" stroke="#c0c0c0" points="3015.5,-5275.8143 2033.5,-5275.8143 2033.5,-167.7955 3015.5,-167.7955 3015.5,-5275.8143"/>
<text text-anchor="middle" x="2524.5" y="-5260.6096" font-family="Inconsolata" font-size="14.00" fill="#000000">local ffi = require &quot;ffi&quot;</text>
<text text-anchor="middle" x="2524.5" y="-5245.2095" font-family="Inconsolata" font-size="14.00" fill="#000000">local bit = require &quot;bit&quot;</text>
<text text-anchor="middle" x="2524.5" y="-5229.8095" font-family="Inconsolata" font-size="14.00" fill="#000000">local reflect = {}</text>
<text text-anchor="middle" x="2524.5" y="-5198.4095" font-family="Inconsolata" font-size="14.00" fill="#000000">local CTState, init_CTState</text>
<text text-anchor="middle" x="2524.5" y="-5183.0095" font-family="Inconsolata" font-size="14.00" fill="#000000">local miscmap, init_miscmap</text>
<text text-anchor="middle" x="2524.5" y="-5151.6094" font-family="Inconsolata" font-size="14.00" fill="#000000">local function gc_str(gcref) &#45;&#45; Convert a GCref (to a GCstr) into a string</text>
<text text-anchor="middle" x="2524.5" y="-5136.2094" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if gcref ~= 0 then</text>
<text text-anchor="middle" x="2524.5" y="-5120.8094" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local ts = ffi.cast(&quot;uint32_t*&quot;, gcref)</text>
<text text-anchor="middle" x="2524.5" y="-5105.4093" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return ffi.string(ts + 4, ts[3])</text>
<text text-anchor="middle" x="2524.5" y="-5090.0093" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="2524.5" y="-5074.6093" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2524.5" y="-5043.2092" font-family="Inconsolata" font-size="14.00" fill="#000000">local typeinfo = ffi.typeinfo</text>
<text text-anchor="middle" x="2524.5" y="-5011.8092" font-family="Inconsolata" font-size="14.00" fill="#000000">local function memptr(gcobj)</text>
<text text-anchor="middle" x="2524.5" y="-4996.4092" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return tonumber(tostring(gcobj):match&quot;%x*$&quot;, 16)</text>
<text text-anchor="middle" x="2524.5" y="-4981.0091" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2524.5" y="-4949.6091" font-family="Inconsolata" font-size="14.00" fill="#000000">init_CTState = function()</text>
<text text-anchor="middle" x="2524.5" y="-4934.2091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; Relevant minimal definitions from lj_ctype.h</text>
<text text-anchor="middle" x="2524.5" y="-4918.8091" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;ffi.cdef [[</text>
<text text-anchor="middle" x="2524.5" y="-4903.409" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;typedef struct CType {</text>
<text text-anchor="middle" x="2524.5" y="-4888.009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;uint32_t info;</text>
<text text-anchor="middle" x="2524.5" y="-4872.609" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;uint32_t size;</text>
<text text-anchor="middle" x="2524.5" y="-4857.2089" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;uint16_t sib;</text>
<text text-anchor="middle" x="2524.5" y="-4841.8089" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;uint16_t next;</text>
<text text-anchor="middle" x="2524.5" y="-4826.4089" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;uint32_t name;</text>
<text text-anchor="middle" x="2524.5" y="-4811.0088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;} CType;</text>
<text text-anchor="middle" x="2524.5" y="-4779.6088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;typedef struct CTState {</text>
<text text-anchor="middle" x="2524.5" y="-4764.2088" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;CType *tab;</text>
<text text-anchor="middle" x="2524.5" y="-4748.8087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;uint32_t top;</text>
<text text-anchor="middle" x="2524.5" y="-4733.4087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;uint32_t sizetab;</text>
<text text-anchor="middle" x="2524.5" y="-4718.0087" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;void *L;</text>
<text text-anchor="middle" x="2524.5" y="-4702.6086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;void *g;</text>
<text text-anchor="middle" x="2524.5" y="-4687.2086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;void *finalizer;</text>
<text text-anchor="middle" x="2524.5" y="-4671.8086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;void *miscmap;</text>
<text text-anchor="middle" x="2524.5" y="-4656.4086" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;} CTState;</text>
<text text-anchor="middle" x="2524.5" y="-4641.0085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;]]</text>
<text text-anchor="middle" x="2524.5" y="-4609.6085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; Acquire a pointer to this Lua universe&#39;s CTState</text>
<text text-anchor="middle" x="2524.5" y="-4594.2085" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local co = coroutine.create(function()end) &#45;&#45; Any live coroutine will do.</text>
<text text-anchor="middle" x="2524.5" y="-4578.8084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local uint32_ptr = ffi.typeof(&quot;uint32_t*&quot;)</text>
<text text-anchor="middle" x="2524.5" y="-4563.4084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local G = ffi.cast(uint32_ptr, ffi.cast(uint32_ptr, memptr(co))[2])</text>
<text text-anchor="middle" x="2524.5" y="-4548.0084" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; In global_State, `MRef ctype_state` is immediately before `GCRef gcroot[GCROOT_MAX]`.</text>
<text text-anchor="middle" x="2524.5" y="-4532.6083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; We first find (an entry in) gcroot by looking for a metamethod name string.</text>
<text text-anchor="middle" x="2524.5" y="-4517.2083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local anchor = ffi.cast(&quot;uint32_t&quot;, ffi.cast(&quot;const char*&quot;, &quot;__index&quot;))</text>
<text text-anchor="middle" x="2524.5" y="-4501.8083" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local i = 0</text>
<text text-anchor="middle" x="2524.5" y="-4486.4082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;while math.abs(tonumber(G[i] &#45; anchor)) &gt; 64 do</text>
<text text-anchor="middle" x="2524.5" y="-4471.0082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;i = i + 1</text>
<text text-anchor="middle" x="2524.5" y="-4455.6082" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="2524.5" y="-4440.2081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; We then work backwards looking for something resembling ctype_state.</text>
<text text-anchor="middle" x="2524.5" y="-4424.8081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;repeat</text>
<text text-anchor="middle" x="2524.5" y="-4409.4081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;i = i &#45; 1</text>
<text text-anchor="middle" x="2524.5" y="-4394.0081" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;CTState = ffi.cast(&quot;CTState*&quot;, G[i])</text>
<text text-anchor="middle" x="2524.5" y="-4378.608" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;until ffi.cast(uint32_ptr, CTState.g) == G</text>
<text text-anchor="middle" x="2524.5" y="-4347.208" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return CTState</text>
<text text-anchor="middle" x="2524.5" y="-4331.808" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2524.5" y="-4300.4079" font-family="Inconsolata" font-size="14.00" fill="#000000">init_miscmap = function()</text>
<text text-anchor="middle" x="2524.5" y="-4285.0079" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; Acquire the CTState&#39;s miscmap table as a Lua variable</text>
<text text-anchor="middle" x="2524.5" y="-4269.6079" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local t = {}; t[0] = t</text>
<text text-anchor="middle" x="2524.5" y="-4254.2078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local tvalue = ffi.cast(&quot;uint32_t*&quot;, memptr(t))[2]</text>
<text text-anchor="middle" x="2524.5" y="-4238.8078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;ffi.cast(&quot;uint32_t*&quot;, tvalue)[ffi.abi&quot;le&quot; and 0 or 1] = ffi.cast(&quot;uint32_t&quot;, ffi.cast(&quot;uintptr_t&quot;, (CTState or init_CTState()).miscmap))</text>
<text text-anchor="middle" x="2524.5" y="-4223.4078" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;miscmap = t[0]</text>
<text text-anchor="middle" x="2524.5" y="-4208.0077" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return miscmap</text>
<text text-anchor="middle" x="2524.5" y="-4192.6077" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2524.5" y="-4161.2077" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Information for unpacking a `struct CType`.</text>
<text text-anchor="middle" x="2524.5" y="-4145.8076" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; One table per CT_* constant, containing:</text>
<text text-anchor="middle" x="2524.5" y="-4130.4076" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; * A name for that CT_</text>
<text text-anchor="middle" x="2524.5" y="-4115.0076" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; * Roles of the cid and size fields.</text>
<text text-anchor="middle" x="2524.5" y="-4099.6076" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; * Whether the sib field is meaningful.</text>
<text text-anchor="middle" x="2524.5" y="-4084.2075" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; * Zero or more applicable boolean flags.</text>
<text text-anchor="middle" x="2524.5" y="-4068.8075" font-family="Inconsolata" font-size="14.00" fill="#000000">local CTs = {[0] =</text>
<text text-anchor="middle" x="2524.5" y="-4053.4075" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;{&quot;int&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-4038.0074" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&quot;&quot;, &quot;size&quot;, false,</text>
<text text-anchor="middle" x="2524.5" y="-4022.6074" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x08000000, &quot;bool&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-4007.2074" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x04000000, &quot;float&quot;, &quot;subwhat&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3991.8073" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x02000000, &quot;const&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3976.4073" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x01000000, &quot;volatile&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3961.0073" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x00800000, &quot;unsigned&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3945.6072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x00400000, &quot;long&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3930.2072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;},</text>
<text text-anchor="middle" x="2524.5" y="-3914.8072" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;{&quot;struct&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-3899.4071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&quot;&quot;, &quot;size&quot;, true,</text>
<text text-anchor="middle" x="2524.5" y="-3884.0071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x02000000, &quot;const&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3868.6071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x01000000, &quot;volatile&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3853.2071" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x00800000, &quot;union&quot;, &quot;subwhat&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3837.807" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x00100000, &quot;vla&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3822.407" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;},</text>
<text text-anchor="middle" x="2524.5" y="-3807.007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;{&quot;ptr&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-3791.6069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&quot;element_type&quot;, &quot;size&quot;, false,</text>
<text text-anchor="middle" x="2524.5" y="-3776.2069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x02000000, &quot;const&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3760.8069" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x01000000, &quot;volatile&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3745.4068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x00800000, &quot;ref&quot;, &quot;subwhat&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3730.0068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;},</text>
<text text-anchor="middle" x="2524.5" y="-3714.6068" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;{&quot;array&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-3699.2067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&quot;element_type&quot;, &quot;size&quot;, false,</text>
<text text-anchor="middle" x="2524.5" y="-3683.8067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x08000000, &quot;vector&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3668.4067" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x04000000, &quot;complex&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3653.0066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x02000000, &quot;const&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3637.6066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x01000000, &quot;volatile&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3622.2066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x00100000, &quot;vla&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3606.8066" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;},</text>
<text text-anchor="middle" x="2524.5" y="-3591.4065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;{&quot;void&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-3576.0065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&quot;&quot;, &quot;size&quot;, false,</text>
<text text-anchor="middle" x="2524.5" y="-3560.6065" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x02000000, &quot;const&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3545.2064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x01000000, &quot;volatile&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3529.8064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;},</text>
<text text-anchor="middle" x="2524.5" y="-3514.4064" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;{&quot;enum&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-3499.0063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&quot;type&quot;, &quot;size&quot;, true,</text>
<text text-anchor="middle" x="2524.5" y="-3483.6063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;},</text>
<text text-anchor="middle" x="2524.5" y="-3468.2063" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;{&quot;func&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-3452.8062" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&quot;return_type&quot;, &quot;nargs&quot;, true,</text>
<text text-anchor="middle" x="2524.5" y="-3437.4062" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x00800000, &quot;vararg&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3422.0062" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x00400000, &quot;sse_reg_params&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3406.6061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;},</text>
<text text-anchor="middle" x="2524.5" y="-3391.2061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;{&quot;typedef&quot;, &#45;&#45; Not seen</text>
<text text-anchor="middle" x="2524.5" y="-3375.8061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&quot;element_type&quot;, &quot;&quot;, false,</text>
<text text-anchor="middle" x="2524.5" y="-3360.4061" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;},</text>
<text text-anchor="middle" x="2524.5" y="-3345.006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;{&quot;attrib&quot;, &#45;&#45; Only seen internally</text>
<text text-anchor="middle" x="2524.5" y="-3329.606" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&quot;type&quot;, &quot;value&quot;, true,</text>
<text text-anchor="middle" x="2524.5" y="-3314.206" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;},</text>
<text text-anchor="middle" x="2524.5" y="-3298.8059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;{&quot;field&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-3283.4059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&quot;type&quot;, &quot;offset&quot;, true,</text>
<text text-anchor="middle" x="2524.5" y="-3268.0059" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;},</text>
<text text-anchor="middle" x="2524.5" y="-3252.6058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;{&quot;bitfield&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-3237.2058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&quot;&quot;, &quot;offset&quot;, true,</text>
<text text-anchor="middle" x="2524.5" y="-3221.8058" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x08000000, &quot;bool&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3206.4057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x02000000, &quot;const&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3191.0057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x01000000, &quot;volatile&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3175.6057" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x00800000, &quot;unsigned&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3160.2056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;},</text>
<text text-anchor="middle" x="2524.5" y="-3144.8056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;{&quot;constant&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-3129.4056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&quot;type&quot;, &quot;value&quot;, true,</text>
<text text-anchor="middle" x="2524.5" y="-3114.0056" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;{0x02000000, &quot;const&quot;},</text>
<text text-anchor="middle" x="2524.5" y="-3098.6055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;},</text>
<text text-anchor="middle" x="2524.5" y="-3083.2055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;{&quot;extern&quot;, &#45;&#45; Not seen</text>
<text text-anchor="middle" x="2524.5" y="-3067.8055" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&quot;CID&quot;, &quot;&quot;, true,</text>
<text text-anchor="middle" x="2524.5" y="-3052.4054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;},</text>
<text text-anchor="middle" x="2524.5" y="-3037.0054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;{&quot;kw&quot;, &#45;&#45; Not seen</text>
<text text-anchor="middle" x="2524.5" y="-3021.6054" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&quot;TOK&quot;, &quot;size&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-3006.2053" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;},</text>
<text text-anchor="middle" x="2524.5" y="-2990.8053" font-family="Inconsolata" font-size="14.00" fill="#000000">}</text>
<text text-anchor="middle" x="2524.5" y="-2959.4053" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Set of CType::cid roles which are a CTypeID.</text>
<text text-anchor="middle" x="2524.5" y="-2944.0052" font-family="Inconsolata" font-size="14.00" fill="#000000">local type_keys = {</text>
<text text-anchor="middle" x="2524.5" y="-2928.6052" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;element_type = true,</text>
<text text-anchor="middle" x="2524.5" y="-2913.2052" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return_type = true,</text>
<text text-anchor="middle" x="2524.5" y="-2897.8051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;value_type = true,</text>
<text text-anchor="middle" x="2524.5" y="-2882.4051" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;type = true,</text>
<text text-anchor="middle" x="2524.5" y="-2867.0051" font-family="Inconsolata" font-size="14.00" fill="#000000">}</text>
<text text-anchor="middle" x="2524.5" y="-2835.6051" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Create a metatable for each CT.</text>
<text text-anchor="middle" x="2524.5" y="-2820.205" font-family="Inconsolata" font-size="14.00" fill="#000000">local metatables = {</text>
<text text-anchor="middle" x="2524.5" y="-2804.805" font-family="Inconsolata" font-size="14.00" fill="#000000">}</text>
<text text-anchor="middle" x="2524.5" y="-2789.405" font-family="Inconsolata" font-size="14.00" fill="#000000">for _, CT in ipairs(CTs) do</text>
<text text-anchor="middle" x="2524.5" y="-2774.0049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local what = CT[1]</text>
<text text-anchor="middle" x="2524.5" y="-2758.6049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local mt = {__index = {}}</text>
<text text-anchor="middle" x="2524.5" y="-2743.2049" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;metatables[what] = mt</text>
<text text-anchor="middle" x="2524.5" y="-2727.8048" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2524.5" y="-2696.4048" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Logic for merging an attribute CType onto the annotated CType.</text>
<text text-anchor="middle" x="2524.5" y="-2681.0048" font-family="Inconsolata" font-size="14.00" fill="#000000">local CTAs = {[0] =</text>
<text text-anchor="middle" x="2524.5" y="-2665.6047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;function(a, refct) error(&quot;TODO: CTA_NONE&quot;) end,</text>
<text text-anchor="middle" x="2524.5" y="-2650.2047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;function(a, refct) error(&quot;TODO: CTA_QUAL&quot;) end,</text>
<text text-anchor="middle" x="2524.5" y="-2634.8047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;function(a, refct)</text>
<text text-anchor="middle" x="2524.5" y="-2619.4047" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;a = 2^a.value</text>
<text text-anchor="middle" x="2524.5" y="-2604.0046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;refct.alignment = a</text>
<text text-anchor="middle" x="2524.5" y="-2588.6046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;refct.attributes.align = a</text>
<text text-anchor="middle" x="2524.5" y="-2573.2046" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end,</text>
<text text-anchor="middle" x="2524.5" y="-2557.8045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;function(a, refct)</text>
<text text-anchor="middle" x="2524.5" y="-2542.4045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;refct.transparent = true</text>
<text text-anchor="middle" x="2524.5" y="-2527.0045" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;refct.attributes.subtype = refct.typeid</text>
<text text-anchor="middle" x="2524.5" y="-2511.6044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end,</text>
<text text-anchor="middle" x="2524.5" y="-2496.2044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;function(a, refct) refct.sym_name = a.name end,</text>
<text text-anchor="middle" x="2524.5" y="-2480.8044" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;function(a, refct) error(&quot;TODO: CTA_BAD&quot;) end,</text>
<text text-anchor="middle" x="2524.5" y="-2465.4043" font-family="Inconsolata" font-size="14.00" fill="#000000">}</text>
<text text-anchor="middle" x="2524.5" y="-2434.0043" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; C function calling conventions (CTCC_* constants in lj_refct.h)</text>
<text text-anchor="middle" x="2524.5" y="-2418.6043" font-family="Inconsolata" font-size="14.00" fill="#000000">local CTCCs = {[0] =</text>
<text text-anchor="middle" x="2524.5" y="-2403.2042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;cdecl&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-2387.8042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;thiscall&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-2372.4042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;fastcall&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-2357.0042" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&quot;stdcall&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-2341.6041" font-family="Inconsolata" font-size="14.00" fill="#000000">}</text>
<text text-anchor="middle" x="2524.5" y="-2310.2041" font-family="Inconsolata" font-size="14.00" fill="#000000">local function refct_from_id(id) &#45;&#45; refct = refct_from_id(CTypeID)</text>
<text text-anchor="middle" x="2524.5" y="-2294.8041" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local ctype = typeinfo(id)</text>
<text text-anchor="middle" x="2524.5" y="-2279.404" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local CT_code = bit.rshift(ctype.info, 28)</text>
<text text-anchor="middle" x="2524.5" y="-2264.004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local CT = CTs[CT_code]</text>
<text text-anchor="middle" x="2524.5" y="-2248.604" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local what = CT[1]</text>
<text text-anchor="middle" x="2524.5" y="-2233.2039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local refct = setmetatable({</text>
<text text-anchor="middle" x="2524.5" y="-2217.8039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;what = what,</text>
<text text-anchor="middle" x="2524.5" y="-2202.4039" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;typeid = id,</text>
<text text-anchor="middle" x="2524.5" y="-2187.0038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;name = ctype.name,</text>
<text text-anchor="middle" x="2524.5" y="-2171.6038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;}, metatables[what])</text>
<text text-anchor="middle" x="2524.5" y="-2140.2038" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; Interpret (most of) the CType::info field</text>
<text text-anchor="middle" x="2524.5" y="-2124.8037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;for i = 5, #CT do</text>
<text text-anchor="middle" x="2524.5" y="-2109.4037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if bit.band(ctype.info, CT[i][1]) ~= 0 then</text>
<text text-anchor="middle" x="2524.5" y="-2094.0037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if CT[i][3] == &quot;subwhat&quot; then</text>
<text text-anchor="middle" x="2524.5" y="-2078.6037" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;refct.what = CT[i][2]</text>
<text text-anchor="middle" x="2524.5" y="-2063.2036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2524.5" y="-2047.8036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;refct[CT[i][2]] = true</text>
<text text-anchor="middle" x="2524.5" y="-2032.4036" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2524.5" y="-2017.0035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2524.5" y="-2001.6035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="2524.5" y="-1986.2035" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if CT_code &lt;= 5 then</text>
<text text-anchor="middle" x="2524.5" y="-1970.8034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;refct.alignment = bit.lshift(1, bit.band(bit.rshift(ctype.info, 16), 15))</text>
<text text-anchor="middle" x="2524.5" y="-1955.4034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;elseif what == &quot;func&quot; then</text>
<text text-anchor="middle" x="2524.5" y="-1940.0034" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;refct.convention = CTCCs[bit.band(bit.rshift(ctype.info, 16), 3)]</text>
<text text-anchor="middle" x="2524.5" y="-1924.6033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="2524.5" y="-1893.2033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if CT[2] ~= &quot;&quot; then &#45;&#45; Interpret the CType::cid field</text>
<text text-anchor="middle" x="2524.5" y="-1877.8033" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local k = CT[2]</text>
<text text-anchor="middle" x="2524.5" y="-1862.4032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local cid = bit.band(ctype.info, 0xffff)</text>
<text text-anchor="middle" x="2524.5" y="-1847.0032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if type_keys[k] then</text>
<text text-anchor="middle" x="2524.5" y="-1831.6032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if cid == 0 then</text>
<text text-anchor="middle" x="2524.5" y="-1816.2032" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;cid = nil</text>
<text text-anchor="middle" x="2524.5" y="-1800.8031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2524.5" y="-1785.4031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;cid = refct_from_id(cid)</text>
<text text-anchor="middle" x="2524.5" y="-1770.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2524.5" y="-1754.603" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2524.5" y="-1739.203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;refct[k] = cid</text>
<text text-anchor="middle" x="2524.5" y="-1723.803" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="2524.5" y="-1692.4029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if CT[3] ~= &quot;&quot; then &#45;&#45; Interpret the CType::size field</text>
<text text-anchor="middle" x="2524.5" y="-1677.0029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local k = CT[3]</text>
<text text-anchor="middle" x="2524.5" y="-1661.6029" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;refct[k] = ctype.size or (k == &quot;size&quot; and &quot;none&quot;)</text>
<text text-anchor="middle" x="2524.5" y="-1646.2028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="2524.5" y="-1614.8028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if what == &quot;attrib&quot; then</text>
<text text-anchor="middle" x="2524.5" y="-1599.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45;&#45; Merge leading attributes onto the type being decorated.</text>
<text text-anchor="middle" x="2524.5" y="-1584.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local CTA = CTAs[bit.band(bit.rshift(ctype.info, 16), 0xff)]</text>
<text text-anchor="middle" x="2524.5" y="-1568.6027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if refct.type then</text>
<text text-anchor="middle" x="2524.5" y="-1553.2027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local ct = refct.type</text>
<text text-anchor="middle" x="2524.5" y="-1537.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;ct.attributes = {}</text>
<text text-anchor="middle" x="2524.5" y="-1522.4026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;CTA(refct, ct)</text>
<text text-anchor="middle" x="2524.5" y="-1507.0026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;ct.typeid = refct.typeid</text>
<text text-anchor="middle" x="2524.5" y="-1491.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;refct = ct</text>
<text text-anchor="middle" x="2524.5" y="-1476.2025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;else</text>
<text text-anchor="middle" x="2524.5" y="-1460.8025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;refct.CTA = CTA</text>
<text text-anchor="middle" x="2524.5" y="-1445.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2524.5" y="-1430.0024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;elseif what == &quot;bitfield&quot; then</text>
<text text-anchor="middle" x="2524.5" y="-1414.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#45;&#45; Decode extra bitfield fields, and make it look like a normal field.</text>
<text text-anchor="middle" x="2524.5" y="-1399.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;refct.offset = refct.offset + bit.band(ctype.info, 127) / 8</text>
<text text-anchor="middle" x="2524.5" y="-1383.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;refct.size = bit.band(bit.rshift(ctype.info, 8), 127) / 8</text>
<text text-anchor="middle" x="2524.5" y="-1368.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;refct.type = {</text>
<text text-anchor="middle" x="2524.5" y="-1353.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;what = &quot;int&quot;,</text>
<text text-anchor="middle" x="2524.5" y="-1337.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;bool = refct.bool,</text>
<text text-anchor="middle" x="2524.5" y="-1322.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;const = refct.const,</text>
<text text-anchor="middle" x="2524.5" y="-1306.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;volatile = refct.volatile,</text>
<text text-anchor="middle" x="2524.5" y="-1291.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;unsigned = refct.unsigned,</text>
<text text-anchor="middle" x="2524.5" y="-1276.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;size = bit.band(bit.rshift(ctype.info, 16), 127),</text>
<text text-anchor="middle" x="2524.5" y="-1260.6021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;}</text>
<text text-anchor="middle" x="2524.5" y="-1245.2021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;refct.bool, refct.const, refct.volatile, refct.unsigned = nil</text>
<text text-anchor="middle" x="2524.5" y="-1229.802" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="2524.5" y="-1198.402" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if CT[4] then &#45;&#45; Merge sibling attributes onto this type.</text>
<text text-anchor="middle" x="2524.5" y="-1183.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;while ctype.sib do</text>
<text text-anchor="middle" x="2524.5" y="-1167.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local entry = typeinfo(ctype.sib)</text>
<text text-anchor="middle" x="2524.5" y="-1152.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if CTs[bit.rshift(entry.info, 28)][1] ~= &quot;attrib&quot; then break end</text>
<text text-anchor="middle" x="2524.5" y="-1136.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if bit.band(entry.info, 0xffff) ~= 0 then break end</text>
<text text-anchor="middle" x="2524.5" y="-1121.4018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;local sib = refct_from_id(ctype.sib)</text>
<text text-anchor="middle" x="2524.5" y="-1106.0018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;sib:CTA(refct)</text>
<text text-anchor="middle" x="2524.5" y="-1090.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;ctype = entry</text>
<text text-anchor="middle" x="2524.5" y="-1075.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2524.5" y="-1059.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="2524.5" y="-1028.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return refct</text>
<text text-anchor="middle" x="2524.5" y="-1013.0017" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2524.5" y="-981.6016" font-family="Inconsolata" font-size="14.00" fill="#000000">local function sib_iter(s, refct)</text>
<text text-anchor="middle" x="2524.5" y="-966.2016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;repeat</text>
<text text-anchor="middle" x="2524.5" y="-950.8016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local ctype = typeinfo(refct.typeid)</text>
<text text-anchor="middle" x="2524.5" y="-935.4015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if not ctype.sib then return end</text>
<text text-anchor="middle" x="2524.5" y="-920.0015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;refct = refct_from_id(ctype.sib)</text>
<text text-anchor="middle" x="2524.5" y="-904.6015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;until refct.what ~= &quot;attrib&quot; &#45;&#45; Pure attribs are skipped.</text>
<text text-anchor="middle" x="2524.5" y="-889.2014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return refct</text>
<text text-anchor="middle" x="2524.5" y="-873.8014" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2524.5" y="-842.4014" font-family="Inconsolata" font-size="14.00" fill="#000000">local function siblings(refct)</text>
<text text-anchor="middle" x="2524.5" y="-827.0013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#45;&#45; Follow to the end of the attrib chain, if any.</text>
<text text-anchor="middle" x="2524.5" y="-811.6013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;while refct.attributes do</text>
<text text-anchor="middle" x="2524.5" y="-796.2013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;refct = refct_from_id(refct.attributes.subtype or typeinfo(refct.typeid).sib)</text>
<text text-anchor="middle" x="2524.5" y="-780.8012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="2524.5" y="-749.4012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return sib_iter, nil, refct</text>
<text text-anchor="middle" x="2524.5" y="-734.0012" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2524.5" y="-702.6012" font-family="Inconsolata" font-size="14.00" fill="#000000">metatables.struct.__index.members = siblings</text>
<text text-anchor="middle" x="2524.5" y="-687.2011" font-family="Inconsolata" font-size="14.00" fill="#000000">metatables.func.__index.arguments = siblings</text>
<text text-anchor="middle" x="2524.5" y="-671.8011" font-family="Inconsolata" font-size="14.00" fill="#000000">metatables.enum.__index.values = siblings</text>
<text text-anchor="middle" x="2524.5" y="-640.4011" font-family="Inconsolata" font-size="14.00" fill="#000000">local function find_sibling(refct, name)</text>
<text text-anchor="middle" x="2524.5" y="-625.001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;local num = tonumber(name)</text>
<text text-anchor="middle" x="2524.5" y="-609.601" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;if num then</text>
<text text-anchor="middle" x="2524.5" y="-594.201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;for sib in siblings(refct) do</text>
<text text-anchor="middle" x="2524.5" y="-578.8009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if num == 1 then</text>
<text text-anchor="middle" x="2524.5" y="-563.4009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;return sib</text>
<text text-anchor="middle" x="2524.5" y="-548.0009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2524.5" y="-532.6008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;num = num &#45; 1</text>
<text text-anchor="middle" x="2524.5" y="-517.2008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2524.5" y="-501.8008" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;else</text>
<text text-anchor="middle" x="2524.5" y="-486.4007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;for sib in siblings(refct) do</text>
<text text-anchor="middle" x="2524.5" y="-471.0007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;if sib.name == name then</text>
<text text-anchor="middle" x="2524.5" y="-455.6007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;return sib</text>
<text text-anchor="middle" x="2524.5" y="-440.2007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2524.5" y="-424.8006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="2524.5" y="-409.4006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;end</text>
<text text-anchor="middle" x="2524.5" y="-394.0006" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2524.5" y="-362.6005" font-family="Inconsolata" font-size="14.00" fill="#000000">metatables.struct.__index.member = find_sibling</text>
<text text-anchor="middle" x="2524.5" y="-347.2005" font-family="Inconsolata" font-size="14.00" fill="#000000">metatables.func.__index.argument = find_sibling</text>
<text text-anchor="middle" x="2524.5" y="-331.8005" font-family="Inconsolata" font-size="14.00" fill="#000000">metatables.enum.__index.value = find_sibling</text>
<text text-anchor="middle" x="2524.5" y="-300.4004" font-family="Inconsolata" font-size="14.00" fill="#000000">function reflect.typeof(x) &#45;&#45; refct = reflect.typeof(ct)</text>
<text text-anchor="middle" x="2524.5" y="-285.0004" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return refct_from_id(tonumber(ffi.typeof(x)))</text>
<text text-anchor="middle" x="2524.5" y="-269.6004" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2524.5" y="-238.2003" font-family="Inconsolata" font-size="14.00" fill="#000000">function reflect.getmetatable(x) &#45;&#45; mt = reflect.getmetatable(ct)</text>
<text text-anchor="middle" x="2524.5" y="-222.8003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;return (miscmap or init_miscmap())[&#45;tonumber(ffi.typeof(x))]</text>
<text text-anchor="middle" x="2524.5" y="-207.4003" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="2524.5" y="-176.0002" font-family="Inconsolata" font-size="14.00" fill="#000000">return reflect</text>
</g>
<!-- codeblock_23&#45;&gt;leaf_33 -->
<g id="edge33" class="edge">
<title>codeblock_23&#45;&gt;leaf_33</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M2323.8978,-5311.7629C2324.4249,-5304.9577 2325.0958,-5296.2955 2325.9016,-5285.8918"/>
<polygon fill="#000000" stroke="#000000" points="2329.3965,-5286.0916 2326.6793,-5275.8512 2322.4174,-5285.551 2329.3965,-5286.0916"/>
</g>
<!-- leaf_26 -->
<g id="node27" class="node">
<title>leaf_26</title>
<polygon fill="none" stroke="#c0c0c0" points="1315,-101.2005 746,-101.2005 746,-30.5998 1315,-30.5998 1315,-101.2005"/>
<text text-anchor="middle" x="1030.5" y="-54.1001" font-family="Inconsolata" font-size="14.00" fill="#000000">LuaJIT FFI reflection Library</text>
<text text-anchor="middle" x="1030.5" y="-38.7001" font-family="Inconsolata" font-size="14.00" fill="#000000">Copyright (C) 2014 Peter Cawley [[mailto:lua@corsix.org]]. All rights reserved.</text>
</g>
<!-- raw_25&#45;&gt;leaf_26 -->
<g id="edge26" class="edge">
<title>raw_25&#45;&gt;leaf_26</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1739.9005,-2703.4811C1744.7225,-2479.051 1789.8801,-266.7653 1698.5,-167.8002 1670.1037,-137.0469 1364.8337,-138.4058 1323.5,-131.8002 1276.8531,-124.3456 1226.5244,-113.9132 1180.9627,-103.5445"/>
<polygon fill="#000000" stroke="#000000" points="1181.543,-100.0869 1171.0138,-101.2644 1179.9791,-106.9099 1181.543,-100.0869"/>
</g>
<!-- leaf_28 -->
<g id="node29" class="node">
<title>leaf_28</title>
<polygon fill="none" stroke="#c0c0c0" points="1888,-124.301 1333,-124.301 1333,-7.4992 1888,-7.4992 1888,-124.301"/>
<text text-anchor="middle" x="1610.5" y="-92.9002" font-family="Inconsolata" font-size="14.00" fill="#000000">Permission is hereby granted, free of charge, to any person obtaining a copy</text>
<text text-anchor="middle" x="1610.5" y="-77.5002" font-family="Inconsolata" font-size="14.00" fill="#000000">of this software and associated documentation files (the &quot;Software&quot;), to deal</text>
<text text-anchor="middle" x="1610.5" y="-62.1001" font-family="Inconsolata" font-size="14.00" fill="#000000">in the Software without restriction, including without limitation the rights</text>
<text text-anchor="middle" x="1610.5" y="-46.7001" font-family="Inconsolata" font-size="14.00" fill="#000000">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</text>
<text text-anchor="middle" x="1610.5" y="-31.3001" font-family="Inconsolata" font-size="14.00" fill="#000000">copies of the Software, and to permit persons to whom the Software is</text>
<text text-anchor="middle" x="1610.5" y="-15.9" font-family="Inconsolata" font-size="14.00" fill="#000000">furnished to do so, subject to the following conditions:</text>
</g>
<!-- raw_27&#45;&gt;leaf_28 -->
<g id="edge28" class="edge">
<title>raw_27&#45;&gt;leaf_28</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1819.2493,-2703.5334C1828.0217,-2486.3341 1908.5003,-401.6091 1775.5,-167.8002 1767.5731,-153.8651 1756.8865,-141.5885 1744.741,-130.8355"/>
<polygon fill="#000000" stroke="#000000" points="1746.9105,-128.0869 1737.0019,-124.3359 1742.4087,-133.4473 1746.9105,-128.0869"/>
</g>
<!-- leaf_30 -->
<g id="node31" class="node">
<title>leaf_30</title>
<polygon fill="none" stroke="#c0c0c0" points="2440.5,-93.2005 1906.5,-93.2005 1906.5,-38.5997 2440.5,-38.5997 2440.5,-93.2005"/>
<text text-anchor="middle" x="2173.5" y="-62.1001" font-family="Inconsolata" font-size="14.00" fill="#000000">The above copyright notice and this permission notice shall be included in</text>
<text text-anchor="middle" x="2173.5" y="-46.7001" font-family="Inconsolata" font-size="14.00" fill="#000000">all copies or substantial portions of the Software.</text>
</g>
<!-- raw_29&#45;&gt;leaf_30 -->
<g id="edge30" class="edge">
<title>raw_29&#45;&gt;leaf_30</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1910.6375,-2703.7998C1900.4276,-2487.6096 1805.5973,-393.2952 1952.5,-167.8002 1973.9352,-134.8973 2008.9369,-112.4541 2044.8286,-97.2127"/>
<polygon fill="#000000" stroke="#000000" points="2046.5167,-100.3047 2054.4629,-93.2969 2043.881,-93.8198 2046.5167,-100.3047"/>
</g>
<!-- leaf_32 -->
<g id="node33" class="node">
<title>leaf_32</title>
<polygon fill="none" stroke="#c0c0c0" points="3014,-131.7005 2459,-131.7005 2459,-.0997 3014,-.0997 3014,-131.7005"/>
<text text-anchor="middle" x="2736.5" y="-100.6002" font-family="Inconsolata" font-size="14.00" fill="#000000">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</text>
<text text-anchor="middle" x="2736.5" y="-85.2002" font-family="Inconsolata" font-size="14.00" fill="#000000">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</text>
<text text-anchor="middle" x="2736.5" y="-69.8002" font-family="Inconsolata" font-size="14.00" fill="#000000">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. &#160;IN NO EVENT SHALL THE</text>
<text text-anchor="middle" x="2736.5" y="-54.4001" font-family="Inconsolata" font-size="14.00" fill="#000000">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</text>
<text text-anchor="middle" x="2736.5" y="-39.0001" font-family="Inconsolata" font-size="14.00" fill="#000000">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</text>
<text text-anchor="middle" x="2736.5" y="-23.6001" font-family="Inconsolata" font-size="14.00" fill="#000000">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</text>
<text text-anchor="middle" x="2736.5" y="-8.2" font-family="Inconsolata" font-size="14.00" fill="#000000">THE SOFTWARE.</text>
</g>
<!-- raw_31&#45;&gt;leaf_32 -->
<g id="edge32" class="edge">
<title>raw_31&#45;&gt;leaf_32</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M1988.0586,-2703.4778C1982.7365,-2479.0077 1932.6661,-266.3389 2024.5,-167.8002 2055.2328,-134.8236 2369.6491,-138.6333 2448.4357,-131.5251"/>
<polygon fill="#000000" stroke="#000000" points="2449.1079,-134.9705 2458.6361,-130.3376 2448.2984,-128.0175 2449.1079,-134.9705"/>
</g>
</g>
</svg>
